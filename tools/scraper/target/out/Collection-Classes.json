[
    {
        "q": "Which of the following statements are correct about an ArrayList collection that implements the IEnumerable interface?\nThe ArrayList class contains an inner class that implements the IEnumerator interface.\nAn ArrayList Collection cannot be accessed simultaneously by different threads.\nThe inner class of ArrayList can access ArrayList class's members.\nTo access members of ArrayList from the inner class, it is necessary to pass ArrayList class's reference to it.\nEnumerator's of ArrayList Collection can manipulate the array.\n", 
        "options": [
            "1 and 2 only", 
            "1 and 3 and 4 only", 
            "2 and 5 only", 
            "All of the above", 
            "None of the above"
        ], 
        "ans": "B"
    }, 
    {
        "q": "How many enumerators will exist if four threads are simultaneously working on an ArrayList object?", 
        "options": [
            "1", 
            "3", 
            "2", 
            "4", 
            "Depends upon the Project Setting made in Visual Studio.NET."
        ], 
        "ans": "D"
    }, 
    {
        "q": "In which of the following collections is the Input/Output index-based?\nStack\nQueue\nBitArray\nArrayList\nHashTable\n", 
        "options": [
            "1 and 2 only", 
            "3 and 4 only", 
            "5 only", 
            "1, 2 and 5 only", 
            "All of the above"
        ], 
        "ans": "B"
    }, 
    {
        "q": "In which of the following collections is the Input/Output based on a key?\nMap\nStack\nBitArray\nHashTable\nSortedList\n", 
        "options": [
            "1 and 2 only", 
            "2 and 3 only", 
            "1, 2 and 3 only", 
            "4 and 5 only", 
            "All of the above"
        ], 
        "ans": "D"
    }, 
    {
        "q": "In a HashTable Key cannot be null, but Value can be.", 
        "options": [
            "True", 
            "False"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements are correct about the C#.NET code snippet given below?\nStack st = new Stack();\nst.Push(\"hello\");\nst.Push(8.2);\nst.Push(5);\nst.Push('b');\nst.Push(true);", 
        "options": [
            "Dissimilar elements like \"hello\", 8.2, 5 cannot be stored in the same Stack collection.", 
            "Boolean values can never be stored in Stack collection.", 
            "In the fourth call to Push(), we should write \"b\" in place of 'b'.", 
            "To store dissimilar elements in a Stack collection, a method PushAnyType() should be used in place of Push().", 
            "This is a perfectly workable code."
        ], 
        "ans": "E"
    }, 
    {
        "q": "Which of the following statements are correct about the Stack collection?\nIt can be used for evaluation of expressions.\nAll elements in the Stack collection can be accessed using an enumerator.\nIt is used to maintain a FIFO list.\nAll elements stored in a Stack collection must be of similar type.\nTop-most element of the Stack collection can be accessed using the Peek() method.\n", 
        "options": [
            "1 and 2 only", 
            "3 and 4 only", 
            "1, 2 and 5 only", 
            "All of the above", 
            "None of the above"
        ], 
        "ans": "C"
    }, 
    {
        "q": "A HashTable t maintains a collection of names of states and capital city of each state. Which of the following is the correct way to find out whether \"Kerala\" state is present in this collection or not?", 
        "options": [
            "t.ContainsKey(\"Kerala\");", 
            "t.HasValue(\"Kerala\");", 
            "t.HasKey(\"Kerala\");", 
            "t.ContainsState(\"Kerala\");", 
            "t.ContainsValue(\"Kerala\");"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following is the correct way to access all elements of the Queue collection created using the C#.NET code snippet given below?\nQueue q = new Queue(); \nq.Enqueue(\"Sachin\"); \nq.Enqueue('A'); \nq.Enqueue(false); \nq.Enqueue(38); \nq.Enqueue(5.4);", 
        "options": [
            "IEnumerator e;\ne = q.GetEnumerator(); \nwhile (e.MoveNext())\nConsole.WriteLine(e.Current);", 
            "IEnumerable e;\ne = q.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", 
            "IEnumerator e;\ne = q.GetEnumerable(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", 
            "IEnumerator e;\ne = Queue.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which  of the following is NOT an interface declared  in System.Collections namespace?", 
        "options": [
            "IComparer", 
            "IEnumerable", 
            "IEnumerator", 
            "IDictionaryComparer", 
            "IDictionaryEnumerator"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Suppose value of the Capacity property of ArrayList Collection is set to 4. What will be the capacity of the Collection on adding fifth element to it?", 
        "options": [
            "4", 
            "8", 
            "16", 
            "32"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following is an ordered collection class?\nMap\nStack\nQueue\nBitArray\nHashTable\n", 
        "options": [
            "1 only", 
            "2 and 3 only", 
            "4 and 5 only", 
            "All of the above", 
            "None of the above"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following is the correct way to find out the number of elements currently present in an ArrayList Collection called arr?", 
        "options": [
            "arr.Count", 
            "arr.GrowSize", 
            "arr.MaxIndex", 
            "arr.Capacity", 
            "arr.UpperBound"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements are correct about a HashTable collection?\n\nIt is a keyed collection.\nIt is a ordered collection.\nIt is an indexed collection.\nIt implements a IDictionaryEnumerator interface in its inner class.\nThe key - value pairs present in a HashTable can be accessed using the Keys and Values properties of the inner class that implements the IDictionaryEnumerator interface.\n", 
        "options": [
            "1 and 2 only", 
            "1, 2 and 3 only", 
            "4 and 5 only", 
            "1, 4 and 5 only", 
            "All of the above"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following is the correct way to access all elements of the Stack collection created using the C#.NET code snippet given below?\nStack st = new Stack();\nst.Push(11);\nst.Push(22);\nst.Push(-53);\nst.Push(33);\nst.Push(66);", 
        "options": [
            "IEnumerable e;\ne = st.GetEnumerator(); \nwhile (e.MoveNext())\nConsole.WriteLine(e.Current);", 
            "IEnumerator e;\ne = st.GetEnumerable(); \nwhile (e.MoveNext())\nConsole.WriteLine(e.Current);", 
            "IEnumerator e;\ne = st.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", 
            "IEnumerator e;\ne = Stack.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements are correct about the Collection Classes available in Framework Class Library?", 
        "options": [
            "Elements of a collection cannot be transmitted over a network.", 
            "Elements stored in a collection can be retrieved but cannot be modified.", 
            "It is not easy to adopt the existing Collection classes for newtype of objects.", 
            "Elements stored in a collection can be modified only if allelements are of similar types.", 
            "They  use  efficient algorithms to  manage  the  collection, thereby improving the performance of the program."
        ], 
        "ans": "E"
    }
]