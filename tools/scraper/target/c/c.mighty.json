[{"q":"What will happen if in a C program you assign a value to an array element whose subscript exceeds the size of array?","options":["The element will be set to 0.","The compiler would report an error.","The program may crash if some important data gets overwritten.","The array size would appropriately grow."],"ans":"C"},{"q":"What does the following declaration mean?\nint (*ptr)[10];","options":["ptr is array of pointers to 10 integers","ptr is a pointer to an array of 10 integers","ptr is an array of 10 integers","ptr is an pointer to array"],"ans":"B"},{"q":"In C, if you pass an array as an argument to a function, what actually gets passed?","options":["Value of elements in array","First element of the array","Base address of the array","Address of the last element of array"],"ans":"C"},{"q":"In which numbering system can the binary number 1011011111000101 be easily converted to?","options":["Decimal system","Hexadecimal system","Octal system","No need to convert"],"ans":"B"},{"q":"Which bitwise operator is suitable for turning off a particular bit in a number?","options":["&& operator","& operator","|| operator","!  operator"],"ans":"B"},{"q":"Which bitwise operator is suitable for turning on a particular bit in a number?","options":["&& operator","& operator","|| operator","|  operator"],"ans":"D"},{"q":"Which bitwise operator is suitable for checking whether a particular bit is on or off?","options":["&& operator","& operator","|| operator","!  operator"],"ans":"B"},{"q":"What will the SWAP macro in the following program be expanded to on preprocessing? will the code compile?\r\n#include<stdio.h>\r\n#define SWAP(a, b, c)(c t; t=a, a=b, b=t)\r\nint main()\r\n{\r\n    int x=10, y=20;\r\n    SWAP(x, y, int);\r\n    printf(\"%d %d\\n\", x, y);\r\n    return 0;\r\n}\r\n","options":["It compiles","Compiles with an warning","Not compile","Compiles and print nothing"],"ans":"C"},{"q":"In which stage the following code #include<stdio.h>  gets replaced by the contents of the file stdio.h","options":["During editing","During linking","During execution","During preprocessing"],"ans":"D"},{"q":"The maximum combined length of the command-line arguments including the spaces between adjacent arguments is","options":["128 characters","256 characters","67 characters","It may vary from one operating system to another"],"ans":"D"},{"q":"According to ANSI specifications which is the correct way of declaring main when it receives command-line arguments?","options":["int main(int argc, char *argv[])","int main(argc, argv)\nint argc; char *argv;\n","int main()\n{\n    int argc; char *argv;\n}\n","None of above"],"ans":"A"},{"q":"What do the 'c' and 'v' in argv stands for?","options":["'c' means argument control 'v' means argument vector","'c' means argument count 'v' means argument vertex","'c' means argument count 'v' means argument vector","'c' means argument configuration 'v' means argument visibility"],"ans":"C"},{"q":"Declare the following statement?\r\n\"An array of three pointers to chars\".","options":["char *ptr[3]();","char *ptr[3];","char (*ptr[3])();","char **ptr[3];"],"ans":"B"},{"q":"What do the following declaration signify?\nint *ptr[30];","options":["ptr is a pointer to an array of 30 integer pointers.","ptr is a array of 30 pointers to integers.","ptr is a array of 30 integer pointers.","ptr is a array 30 pointers."],"ans":"B"},{"q":"Declare the following statement?\r\n\"A pointer to an array of three chars\".","options":["char *ptr[3]();","char (*ptr)*[3];","char (*ptr[3])();","char (*ptr)[3];"],"ans":"D"},{"q":"What do the following declaration signify?\nchar *arr[10];","options":["arr is a array of 10 character pointers.","arr is a array of function pointer.","arr is a array of characters.","arr is a pointer to array of characters."],"ans":"A"},{"q":"What do the following declaration signify?\nint (*pf)();","options":["pf is a pointer to function.","pf is a function pointer.","pf is a pointer to a function which return int","pf is a function of pointer variable."],"ans":"C"},{"q":"Declare the following statement?\n\"A pointer to a function which receives an int pointer and returns float pointer\".","options":["float *(ptr)*int;","float *(*ptr)(int)","float *(*ptr)(int*)","float (*ptr)(int)"],"ans":"C"},{"q":"What do the following declaration signify?\nvoid *cmp();","options":["cmp is a pointer to an void type.","cmp is a void type pointer variable.","cmp is a function that return a void pointer.","cmp function returns nothing."],"ans":"C"},{"q":"Declare the following statement?\n\"A pointer to a function which receives nothing and returns nothing\".","options":["void *(ptr)*int;","void *(*ptr)()","void *(*ptr)(*)","void (*ptr)()"],"ans":"D"},{"q":"What do the following declaration signify?\r\nint *f();","options":["f is a pointer variable of function type.","f is a function returning pointer to an int.","f is a function pointer.","f is a simple declaration of pointer variable."],"ans":"B"},{"q":"What do the following declaration signify?\nvoid (*cmp)();","options":["cmp is a pointer to an void function type.","cmp is a void type pointer function.","cmp is a function that return a void pointer.","cmp is a pointer to a function which returns void ."],"ans":"D"},{"q":"What do the following declaration signify?\nchar **argv;","options":["argv is a pointer to pointer.","argv is a pointer to a char pointer.","argv is a function pointer.","argv is a member of function pointer."],"ans":"B"},{"q":"What do the following declaration signify?\nchar *scr;","options":["scr is a pointer to pointer variable.","scr is a function pointer.","scr is a pointer to char.","scr is a member of function pointer."],"ans":"C"},{"q":"What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    int y=128;\n    const int x=y;\n    printf(\"%d\\n\", x);\n    return 0;\n}\n","options":["128","Garbage value","Error","0"],"ans":"A"},{"q":"What will be the output of the program?\n#include<stdio.h>\n#include<stdlib.h>\n\nunion employee\n{\n    char name[15];\n    int age;\n    float salary;\n};\nconst union employee e1;\n\nint main()\n{\n    strcpy(e1.name, \"K\");\n    printf(\"%s %d %f\", e1.name, e1.age, e1.salary);\n    return 0;\n}\n","options":["Error: RValue required","Error: cannot convert from 'const int *' to 'int *const'","Error: LValue required in strcpy","No error"],"ans":"D"},{"q":"What will be the output of the program?\n#include<stdio.h>\nint fun(int **ptr);\n\nint main()\n{\n    int i=10;\n    const int *ptr = &i;\n    fun(&ptr);\n    return 0;\n}\nint fun(int **ptr)\n{\n    int j = 223;\n    int *temp = &j;\n    printf(\"Before changing ptr = %5x\\n\", *ptr);\n    const *ptr = temp;\n    printf(\"After changing ptr = %5x\\n\", *ptr);\n    return 0;\n}\n","options":["Address of iAddress of j","10223","Error: cannot convert parameter 1 from 'const int **' to 'int **'","Garbage value"],"ans":"C"},{"q":"What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    const int x=5;\n    const int *ptrx;\n    ptrx = &x;\n    *ptrx = 10;\n    printf(\"%d\\n\", x);\n    return 0;\n}\n","options":["5","10","Error","Garbage value"],"ans":"C"},{"q":"What will be the output of the program in TurboC?\n#include<stdio.h>\nint fun(int **ptr);\n\nint main()\n{\n    int i=10, j=20;\n    const int *ptr = &i;\n    printf(\" i = %5X\", ptr);\n    printf(\" ptr = %d\", *ptr);\n    ptr = &j;\n    printf(\" j = %5X\", ptr);\n    printf(\" ptr = %d\", *ptr);\n    return 0;\n}\n","options":["i= FFE2 ptr=12 j=FFE4 ptr=24","i= FFE4 ptr=10 j=FFE2 ptr=20","i= FFE0 ptr=20 j=FFE1 ptr=30","Garbage value"],"ans":"B"},{"q":"What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    const char *s = \"\";\n    char str[] = \"Hello\";\n    s = str;\n    while(*s)\n        printf(\"%c\", *s++);\n\n    return 0;\n}\n","options":["Error","H","Hello","Hel"],"ans":"C"},{"q":"What will be the output of the program?\n#include<stdio.h>\nint get();\n\nint main()\n{\n    const int x = get();\n    printf(\"%d\", x);\n    return 0;\n}\nint get()\n{\n    return 20;\n}\n","options":["Garbage value","Error","20","0"],"ans":"C"},{"q":"What will be the output of the program (in Turbo C)?\n#include<stdio.h>\n\nint fun(int *f)\n{\n    *f = 10;\n    return 0;\n}\nint main()\n{\n    const int arr[5] = {1, 2, 3, 4, 5};\n    printf(\"Before modification arr[3] = %d\", arr[3]);\n    fun(&arr[3]);\n    printf(\"\\nAfter modification arr[3] = %d\", arr[3]);\n    return 0;\n}\n","options":["Before modification arr[3] = 4 After modification arr[3] = 10","Error: cannot convert parameter 1 from const int * to int *","Error: Invalid parameter","Before modification arr[3] = 4 After modification arr[3] = 4"],"ans":"A"},{"q":"What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    const int i=0;\n    printf(\"%d\\n\", i++);\n    return 0;\n}\n","options":["10","11","No output","Error: ++needs a value"],"ans":"D"},{"q":"What will be the output of the program?\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    const c = -11;\r\n    const int d = 34;\r\n    printf(\"%d, %d\\n\", c, d);\r\n    return 0;\r\n}\r\n","options":["Error","-11, 34","11, 34","None of these"],"ans":"B"},{"q":"How many times \"IndiaBIX\" is get printed?\n#include<stdio.h>\nint main()\n{\n    int x;\n    for(x=-1; x<=10; x++)\n    {\n        if(x < 5)\n            continue;\n        else\n            break;\n        printf(\"IndiaBIX\");\n    }\n    return 0;\n}\n","options":["Infinite times","11 times","0 times","10 times"],"ans":"C"},{"q":"How many times the while loop will get executed if a short int is 2 byte wide?\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    int j=1;\r\n    while(j <= 255)\r\n    {\r\n        printf(\"%c %d\\n\", j, j);\r\n        j++;\r\n    }\r\n    return 0;\r\n}\r\n","options":["Infinite times","255 times","256 times","254 times"],"ans":"B"},{"q":"Which of the following is not logical operator?","options":["&","&&","||","!"],"ans":"A"},{"q":"In mathematics and computer programming, which is the correct order of mathematical operators ?","options":["Addition, Subtraction, Multiplication, Division","Division, Multiplication, Addition, Subtraction","Multiplication, Addition, Division, Subtraction","Addition, Division, Modulus, Subtraction"],"ans":"B"},{"q":"Which of the following cannot be checked in a switch-case statement?","options":["Character","Integer","Float","enum"],"ans":"C"},{"q":"Which of the following statements should be used to obtain a remainder after dividing 3.14 by 2.1 ?","options":["rem = 3.14 % 2.1;","rem = modf(3.14, 2.1);","rem = fmod(3.14, 2.1);","Remainder cannot be obtain in floating point division."],"ans":"C"},{"q":"What are the types of linkages?","options":["Internal and External","External, Internal and None","External and None","Internal"],"ans":"B"},{"q":"Which of the following special symbol allowed in a variable name?","options":["* (asterisk)","| (pipeline)","- (hyphen)","_ (underscore)"],"ans":"D"},{"q":"Is there any difference between following declarations?\n\n\n1 :\nextern int fun();\n\n\n2 :\nint fun();\n\n","options":["Both are identical","No difference, except extern int fun(); is probably in another file","int fun(); is overrided with extern int fun();","None of these"],"ans":"B"},{"q":"How would you round off a value from 1.66 to 2.0?","options":["ceil(1.66)","floor(1.66)","roundup(1.66)","roundto(1.66)"],"ans":"A"},{"q":"By default a real number is treated as a","options":["float","double","long double","far double"],"ans":"B"},{"q":"Which of the following is not user defined data type?\r\n\n\n1 :\nstruct book\r\n{\r\n    char name[10];\r\n    float price;\r\n    int pages;\r\n};\n\n\n2 :\nlong int l = 2.35;\n\n\n3 :\nenum day {Sun, Mon, Tue, Wed};\n\n","options":["1","2","3","Both 1 and 2"],"ans":"B"},{"q":"Is the following statement a declaration or definition?\nextern int i;","options":["Declaration","Definition","Function","Error"],"ans":"A"},{"q":"Identify which of the following are declarations\r\n\n\n1 :\nextern int x;\n\n\n2 :\nfloat square ( float x ) { ... }\n\n\n3 :\ndouble pow(double, double);\n\n","options":["1","2","1 and 3","3"],"ans":"C"},{"q":"In the following program where is the variable a getting defined and where it is getting declared?\n#include<stdio.h>\nint main()\n{\n    extern int a;\n    printf(\"%d\\n\", a);\n    return 0;\n}\nint a=20;\n","options":["extern int a is declaration, int a = 20 is the definition","int a = 20 is declaration, extern int a is the definition","int a = 20 is definition, a is not defined","a is declared, a is not defined"],"ans":"A"},{"q":"When we mention the prototype of a function?","options":["Defining","Declaring","Prototyping","Calling"],"ans":"B"},{"q":"Which of the following is the correct order of evaluation for the below expression?z = x + y * z / 4 % 2 - 1","options":["* / % + - =","= * / % + -","/ * % - + =","*  % /  - + ="],"ans":"A"},{"q":"Which of the following correctly shows the hierarchy of arithmetic operations in C?","options":["/ + * -","* - / +","+ - / *","/ * + -"],"ans":"D"},{"q":"Which of the following is the correct usage of conditional operators used in C?","options":["a>b ? c=30 : c=40;","a>b ? c=30;","max = a>b ? a>c?a:c:b>c?b:c","return (a>b)?(a:b)"],"ans":"C"},{"q":"Which of the following is the correct order if calling functions in the below code?\na = f1(23, 14) * f2(12/4) + f3();","options":["f1, f2, f3","f3, f2, f1","Order may vary from compiler to compiler","None of above"],"ans":"C"},{"q":"Which of the following are unary operators in C?\n\n\n1.\n!\n\n\n2.\nsizeof\n\n\n3.\n~\n\n\n4.\n&&\n\n","options":["1, 2","1, 3","2, 4","1, 2, 3"],"ans":"D"},{"q":"In which order do the following gets evaluated\n\n\n1.\nRelational\n\n\n2.\nArithmetic\n\n\n3.\nLogical\n\n\n4.\nAssignment\n\n","options":["2134","1234","4321","3214"],"ans":"A"},{"q":"What are the different types of real data type in C ?","options":["float, double","short int, double, long int","float, double, long double","double, long int, float"],"ans":"C"},{"q":"What will you do to treat the constant 3.14 as a long double?","options":["use 3.14LD","use 3.14L","use 3.14DL","use 3.14LF"],"ans":"B"},{"q":"If the binary eauivalent of 5.375 in normalised form is 0100 0000 1010 1100 0000 0000 0000 0000, what will be the output of the program (on intel machine)? \n#include<stdio.h>\n#include<math.h>\nint main()\n{\n    float a=5.375;\n    char *p;\n    int i;\n    p = (char*)&a;\n    for(i=0; i<=3; i++)\n        printf(\"%02x\\n\", (unsigned char)p[i]);\n    return 0;\n}\n","options":["40 AC 00 00","04 CA 00 00","00 00 AC 40","00 00 CA 04"],"ans":"C"},{"q":"Which of the following range is a valid long double (Turbo C in 16 bit DOS OS) ?","options":["3.4E-4932 to 1.1E+4932","3.4E-4932 to 3.4E+4932","1.1E-4932 to 1.1E+4932","1.7E-4932 to 1.7E+4932"],"ans":"A"},{"q":"Which statement will you add in the following program to work it correctly?\n#include<stdio.h>\nint main()\n{\n    printf(\"%f\\n\", log(36.0));\n    return 0;\n}\n","options":["#include<conio.h>","#include<math.h>","#include<stdlib.h>","#include<dos.h>"],"ans":"B"},{"q":"We want to round off x, a float, to an int value, The correct way to do is","options":["y = (int)(x + 0.5)","y = int(x + 0.5)","y = (int)x + 0.5","y = (int)((int)x + 0.5)"],"ans":"A"},{"q":"The binary equivalent of 5.375 is","options":["101.101110111","101.011","101011","None of above"],"ans":"B"},{"q":"A float occupies 4 bytes. If the hexadecimal equivalent of these 4 bytes are A, B, C and D, then when this float is stored in memory in which of the following order do these bytes gets stored?","options":["ABCD","DCBA","0xABCD","Depends on big endian or little endian architecture"],"ans":"D"},{"q":"What will you do to treat the constant 3.14 as a float?","options":["use float(3.14f)","use 3.14f","use f(3.14)","use (f)(3.14)"],"ans":"B"},{"q":"Which of the following statement obtains the remainder on dividing 5.5 by 1.3 ?","options":["rem = (5.5 % 1.3)","rem = modf(5.5, 1.3)","rem = fmod(5.5, 1.3)","Error: we can't divide"],"ans":"C"},{"q":"The keyword used to transfer control from a function back to the calling function is","options":["switch","goto","go back","return"],"ans":"D"},{"q":"What is the notation for following functions?\n1.  int f(int a, float b)\n    {\n        /* Some code */\n    }\n\n2.  int f(a, b)\n    int a; float b;\n    {\n        /* Some code */\n    }\n","options":["1. KR Notation 2. ANSI Notation","1. Pre ANSI C Notation 2. KR Notation","1. ANSI Notation 2. KR Notation","1. ANSI Notation 2. Pre ANSI Notation"],"ans":"C"},{"q":"How many times the program will print \"IndiaBIX\" ?\n#include<stdio.h>\n\nint main()\n{\n    printf(\"IndiaBIX\");\n    main();\n    return 0;\n}\n","options":["Infinite times","32767 times","65535 times","Till stack overflows"],"ans":"D"},{"q":"In a file contains the line \"I am a boy\\r\\n\" then on reading this line into the array str using fgets(). What will str contain?","options":["\"I am a boy\\r\\n\\0\"","\"I am a boy\\r\\0\"","\"I am a boy\\n\\0\"","\"I am a boy\""],"ans":"C"},{"q":"What is the purpose of \"rb\" in fopen() function used below in the code?\nFILE *fp;\nfp = fopen(\"source.txt\", \"rb\");\n","options":["open \"source.txt\" in binary mode for reading","open \"source.txt\" in binary mode for reading and writing","Create a new file \"source.txt\" for reading and writing","None of above"],"ans":"A"},{"q":"What does fp point to in the program ?\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    FILE *fp;\r\n    fp=fopen(\"trial\", \"r\");\r\n    return 0;\r\n}\r\n","options":["The first character in the file","A structure which contains a char pointer which points to the first character of a file.","The name of the file.","The last character in the file."],"ans":"B"},{"q":"Which of the following operations can be performed on the file \"NOTES.TXT\" using the below code?\nFILE *fp;\nfp = fopen(\"NOTES.TXT\", \"r+\");\n","options":["Reading","Writing","Appending","Read and Write"],"ans":"D"},{"q":"To print out a and b given below, which of the following printf() statement will you use?\n#include<stdio.h>\n\nfloat a=3.14;\ndouble b=3.14;\n","options":["printf(\"%f %lf\", a, b);","printf(\"%Lf %f\", a, b);","printf(\"%Lf %Lf\", a, b);","printf(\"%f %Lf\", a, b);"],"ans":"A"},{"q":"Which files will get closed through the fclose() in the following program?\n#include<stdio.h>\n\nint main()\n{\n    FILE *fs, *ft, *fp;\n    fp = fopen(\"A.C\", \"r\");\n    fs = fopen(\"B.C\", \"r\");\n    ft = fopen(\"C.C\", \"r\");\n    fclose(fp, fs, ft);\n    return 0;\n}\n","options":["\"A.C\" \"B.C\" \"C.C\"","\"B.C\" \"C.C\"","\"A.C\"","Error in fclose()"],"ans":"D"},{"q":"On executing the below program what will be the contents of 'target.txt' file if the source file contains a line \"To err is human\"?\n#include<stdio.h>\n\nint main()\n{\n    int i, fss;\n    char ch, source[20] = \"source.txt\", target[20]=\"target.txt\", t;\n    FILE *fs, *ft;\n    fs = fopen(source, \"r\");\n    ft = fopen(target, \"w\");\n    while(1)\n    {\n        ch=getc(fs);\n        if(ch==EOF)\n            break;\n        else\n        {\n            fseek(fs, 4L, SEEK_CUR);\n            fputc(ch, ft);\n        }\n    }\n    return 0;\n}\n","options":["r n","Trh","err","None of above"],"ans":"B"},{"q":"To scan a and b given below, which of the following scanf() statement will you use?\n#include<stdio.h>\n\nfloat a;\ndouble b;\n","options":["scanf(\"%f %f\", &a, &b);","scanf(\"%Lf %Lf\", &a, &b);","scanf(\"%f %Lf\", &a, &b);","scanf(\"%f %lf\", &a, &b);"],"ans":"D"},{"q":"Out of fgets() and gets() which function is safe to use?","options":["gets()","fgets()"],"ans":"B"},{"q":"Consider the following program and what will be content of t?\n#include<stdio.h>\n\nint main()\n{\n    FILE *fp;\n    int t;\n    fp = fopen(\"DUMMY.C\", \"w\");\n    t = fileno(fp);\n    printf(\"%d\\n\", t);\n    return 0;\n}\n","options":["size of \"DUMMY.C\" file","The handle associated with \"DUMMY.C\" file","Garbage value","Error in fileno()"],"ans":"B"},{"q":"What will the function rewind() do?","options":["Reposition the file pointer to a character reverse.","Reposition the file pointer stream to end of file.","Reposition the file pointer to begining of that line.","Reposition the file pointer to begining of file."],"ans":"D"},{"q":"Input/output function prototypes and macros are defined in which header file?","options":["conio.h","stdlib.h","stdio.h","dos.h"],"ans":"C"},{"q":"Which standard library function will you use to find the last occurance of a character in a string in C?","options":["strnchar()","strchar()","strrchar()","strrchr()"],"ans":"D"},{"q":"What is stderr ?","options":["standard error","standard error types","standard error streams","standard error definitions"],"ans":"C"},{"q":"Does there any function exist to convert the int or float to a string?","options":["Yes","No"],"ans":"A"},{"q":"What is the purpose of fflush() function.","options":["flushes all streams and specified streams.","flushes only specified stream.","flushes input/output buffer.","flushes file buffer."],"ans":"A"},{"q":"Can you use the fprintf() to display the output on the screen?","options":["Yes","No"],"ans":"A"},{"q":"What will the function randomize() do in Turbo C under DOS?","options":["returns a random number.","returns a random number generator in the specified range.","returns a random number generator with a random value based on time.","return a random number with a given seed value."],"ans":"C"},{"q":"Which header file should be included to use functions like malloc() and calloc()?","options":["memory.h","stdlib.h","string.h","dos.h"],"ans":"B"},{"q":"What function should be used to free the memory allocated by calloc() ?","options":["dealloc();","malloc(variable_name, 0)","free();","memalloc(variable_name, 0)"],"ans":"C"},{"q":"How will you free the memory allocated by the following program?\n#include<stdio.h>\n#include<stdlib.h>\n#define MAXROW 3\n#define MAXCOL 4\n\nint main()\n{\n    int **p, i, j;\n    p = (int **) malloc(MAXROW * sizeof(int*));\n    return 0;\n}\n","options":["memfree(int p);","dealloc(p);","malloc(p, 0);","free(p);"],"ans":"D"},{"q":"Specify the 2 library functions to dynamically allocate memory?","options":["malloc() and memalloc()","alloc() and memalloc()","malloc() and calloc()","memalloc() and faralloc()"],"ans":"C"},{"q":"What is (void*)0?","options":["Representation of NULL pointer","Representation of void pointer","Error","None of above"],"ans":"A"},{"q":"Can you combine the following two statements into one?\nchar *p;\np = (char*) malloc(100);\n","options":["char p = *malloc(100);","char *p = (char) malloc(100);","char *p = (char*)malloc(100);","char *p = (char *)(malloc*)(100);"],"ans":"C"},{"q":"In which header file is the NULL macro defined?","options":["stdio.h","stddef.h","stdio.h and stddef.h","math.h"],"ans":"C"},{"q":"How many bytes are occupied by near, far and huge pointers (DOS)?","options":["near=2 far=4 huge=4","near=4 far=8 huge=8","near=2 far=4 huge=8","near=4 far=4 huge=8"],"ans":"A"},{"q":"If a variable is a pointer to a structure, then which of the following operator is used to access data members of the structure through the pointer variable?","options":[".","&","*","->"],"ans":"D"},{"q":"What would be the equivalent pointer expression for referring the array element a[i][j][k][l]","options":["((((a+i)+j)+k)+l)","*(*(*(*(a+i)+j)+k)+l)","(((a+i)+j)+k+l)","((a+i)+j+k+l)"],"ans":"B"},{"q":"A pointer is","options":["A keyword used to create variables","A variable that stores address of an instruction","A variable that stores address of other variable","All of the above"],"ans":"C"},{"q":"The operator used to get value at address stored in a pointer variable is","options":["*","&","&&","||"],"ans":"A"},{"q":"Which of the following function sets first n characters of a string to a given character?","options":["strinit()","strnset()","strset()","strcset()"],"ans":"B"},{"q":"If the two strings are identical, then strcmp() function returns","options":["-1","1","0","Yes"],"ans":"C"},{"q":"How will you print \\n on the screen?","options":["printf(\"\\n\");","echo \"\\\\n\";","printf('\\n');","printf(\"\\\\n\");"],"ans":"D"},{"q":"The library function used to find the last occurrence of a character in a string is","options":["strnstr()","laststr()","strrchr()","strstr()"],"ans":"C"},{"q":"Which of the following function is used to find the first occurrence of a given string in another string?","options":["strchr()","strrchr()","strstr()","strnset()"],"ans":"C"},{"q":"Which of the following function is more appropriate for reading in a multi-word string?","options":["printf();","scanf();","gets();","puts();"],"ans":"C"},{"q":"Which of the following function is correct that finds the length of a string?","options":["int xstrlen(char *s)\n{\n    int length=0;\n    while(*s!='\\0')\n    {    length++; s++; }\n    return (length);\n}\n","int xstrlen(char s)\n{\n    int length=0;\n    while(*s!='\\0')\n        length++; s++;\n    return (length);\n}\n","int xstrlen(char *s)\r\n{\r\n    int length=0;\r\n    while(*s!='\\0')\r\n        length++;\r\n    return (length);\r\n}\r\n","int xstrlen(char *s)\r\n{\r\n    int length=0;\r\n    while(*s!='\\0')\r\n        s++;\r\n    return (length);\r\n}\r\n"],"ans":"A"},{"q":"How will you free the allocated memory ?","options":["remove(var-name);","free(var-name);","delete(var-name);","dalloc(var-name);"],"ans":"B"},{"q":"What is the similarity between a structure, union and enumeration?","options":["All of them let you define new values","All of them let you define new data types","All of them let you define new pointers","All of them let you define new structures"],"ans":"B"},{"q":"In the following code, the P2 is Integer Pointer or Integer?\r\ntypedef int *ptr;\r\nptr p1, p2;\r\n","options":["Integer","Integer pointer","Error in declaration","None of above"],"ans":"B"},{"q":"In the following code what is 'P'?\ntypedef char *charp;\nconst charp P;\n","options":["P is a constant","P is a character constant","P is character type","None of above"],"ans":"A"},{"q":"What is x in the following program?\n#include<stdio.h>\n\nint main()\n{\n    typedef char (*(*arrfptr[3])())[10];\n    arrfptr x;\n    return 0;\n}\n","options":["x is a pointer","x is an array of three pointer","x is an array of three function pointers","Error in x declaration"],"ans":"C"},{"q":"What will be the output of the program?\n#include<stdio.h>\n#include<stdarg.h>\nvoid fun(char *msg, ...);\n\nint main()\n{\n    fun(\"IndiaBIX\", 1, 4, 7, 11, 0);\n    return 0;\n}\nvoid fun(char *msg, ...)\n{\n    va_list ptr;\n    int num;\n    va_start(ptr, msg);\n    num = va_arg(ptr, int);\n    num = va_arg(ptr, int);\n    printf(\"%d\", num);\n}\n","options":["IndiaBIX 1 7 11 0","1","4","7"],"ans":"C"},{"q":"What will be the output of the program?\n#include<stdio.h>\n#include<stdarg.h>\nvoid fun1(char, int, int *, float *, char *);\nvoid fun2(char ch, ...);\nvoid (*p1)(char, int, int *, float *, char *);\nvoid (*p2)(char ch, ...);\n\nint main()\n{\n    char ch='A'; int i=10;\n    float f=3.14; char *p=\"Hello\";\n    p1=fun1;\n    p2=fun2;\n    (*p1)(ch, i, &i, &f, p);\n    (*p2)(ch, i, &i, &f, p);\n    return 0;\n}\nvoid fun1(char ch, int i, int *pi, float *pf, char *p)\n{\n    printf(\"%c %d %d %f %s \\n\", ch, i, *pi, *pf, p);\n}\nvoid fun2(char ch, ...)\n{\n    int i, *pi; float *pf; char *p;\n    va_list list;\n    printf(\"%c \", ch);\n    va_start(list, ch);\n    i = va_arg(list, int);\n    printf(\"%d \", i);\n    \n    pi = va_arg(list, int*);\n    printf(\"%d \", *pi);\n    pf = va_arg(list, float*);\n    printf(\"%f \", *pf);\n    p = va_arg(list, char *);\n    printf(\"%s\", p);\n}\n","options":["A 10 3.14\nA 10 3.14","A 10 10 3.140000 Hello\nA 10 10 3.140000 Hello","A 10 Hello\nA 10 Hello","Error"],"ans":"B"},{"q":"What will be the output of the program?\n#include<stdio.h>\n#include<stdarg.h>\nvoid dumplist(int, ...);\n\nint main()\n{\n    dumplist(2, 4, 8);\n    dumplist(3, 6, 9, 7);\n    return 0;\n}\nvoid dumplist(int n, ...)\n{\n    va_list p; int i;\n    va_start(p, n);\n\n    while(n-->0)\n    {\n        i = va_arg(p, int);\n        printf(\"%d\", i);\n    }\n    va_end(p);\n    printf(\"\\n\");\n}\n","options":["2 4\n3 6","2 4 8\n3, 6, 9, 7","4 8\n6 9 7","1 1 1\n1 1 1 1"],"ans":"C"},{"q":"What will be the output of the program?\n#include<stdio.h>\n#include<stdarg.h>\nvoid display(int num, ...);\n\nint main()\n{\n    display(4, 'A', 'B', 'C', 'D');\n    return 0;\n}\nvoid display(int num, ...)\n{\n    char c, c1; int j;\n    va_list ptr, ptr1;\n    va_start(ptr, num);\n    va_start(ptr1, num);\n    for(j=1; j<=num; j++)\n    {\n        c = va_arg(ptr, int);\n        printf(\"%c\", c);\n        c1 = va_arg(ptr1, int);\n        printf(\"%d\\n\", c1);\n    }\n}\n","options":["A, AB, BC, CD, D","A, aB, bC, cD, d","A, 65B, 66C, 67D, 68","A, 0B, 0C, 0C, 0"],"ans":"C"},{"q":"What will be the output of the program?\n#include<stdio.h>\n#include<stdarg.h>\nvoid fun1(int num, ...);\nvoid fun2(int num, ...);\n\nint main()\n{\n    fun1(1, \"Apple\", \"Boys\", \"Cats\", \"Dogs\");\n    fun2(2, 12, 13, 14);\n    return 0;\n}\nvoid fun1(int num, ...)\n{\n    char *str;\n    va_list ptr;\n    va_start(ptr, num);\n    str = va_arg(ptr, char *);\n    printf(\"%s \", str);\n}\nvoid fun2(int num, ...)\n{\n    va_list ptr;\n    va_start(ptr, num);\n    num = va_arg(ptr, int);\n    printf(\"%d\", num);\n}\n","options":["Dogs 12","Cats 14","Boys 13","Apple 12"],"ans":"D"}]