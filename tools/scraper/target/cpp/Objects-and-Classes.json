[
    {
        "q": "What happens when we try to compile the class definition in following code snippet?\nclass Birds {};\nclass Peacock : protected Birds {};", 
        "options": [
            "It will not compile because class body of Birds is not defined.", 
            "It will not compile because class body of Peacock is not defined.", 
            "It will not compile because a class cannot be protectedly inherited from other class.", 
            "It will compile succesfully."
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following statements is incorrect?", 
        "options": [
            "Friend keyword can be used in the class to allow access to another class.", 
            "Friend keyword can be used for a function in the public section of a class.", 
            "Friend keyword can be used for a function in the private section of a class.", 
            "Friend keyword can be used on main()."
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following statement is correct regarding destructor of base class?", 
        "options": [
            "Destructor of base class should always be static.", 
            "Destructor of base class should always be virtual.", 
            "Destructor of base class should not be virtual.", 
            "Destructor of base class should always be private."
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following two entities (reading from Left to Right) can be connected by the dot operator?", 
        "options": [
            "A class member and a class object.", 
            "A class object and a class.", 
            "A class and a member of that class.", 
            "A class object and a member of that class."
        ], 
        "ans": "D"
    }, 
    {
        "q": "How can we make a class abstract?", 
        "options": [
            "By making all member functions constant.", 
            "By making at least one member function as pure virtual function.", 
            "By declaring it abstract using the static keyword.", 
            "By declaring it abstract using the virtual keyword."
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements is correct when a class is inherited publicly?", 
        "options": [
            "Public members of the base class become protected members of derived class.", 
            "Public members of the base class become private members of derived class.", 
            "Private members of the base class become protected members of derived class.", 
            "Public members of the base class become public members of derived class."
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following statements is correct about the constructors and destructors?", 
        "options": [
            "Destructors can take arguments but constructors cannot.", 
            "Constructors can take arguments but destructors cannot.", 
            "Destructors can be overloaded but constructors cannot be overloaded.", 
            "Constructors and destructors can both return a value."
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following access specifies is used in a class definition by default?", 
        "options": [
            "Protected", 
            "Public", 
            "Private", 
            "Friend"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statement is correct with respect to the use of friend keyword inside a class?", 
        "options": [
            "A private data member can be declared as a friend.", 
            "A class may be declared as a friend.", 
            "An object may be declared as a friend.", 
            "We can use friend keyword as a class name."
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following keywords is used to control access to a class member?", 
        "options": [
            "Default", 
            "Break", 
            "Protected", 
            "Asm"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following can access private data members or member functions of a class?", 
        "options": [
            "Any function in the program.", 
            "All global functions in the program.", 
            "Any member function of that class.", 
            "Only public member functions of that class."
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following type of data member can be shared by all instances of its class?", 
        "options": [
            "Public", 
            "Inherited", 
            "Static", 
            "Friend"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following also known as an instance of a class?", 
        "options": [
            "Friend Functions", 
            "Object", 
            "Member Functions", 
            "Member Variables"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Constructor is executed when _____.", 
        "options": [
            "an object is created", 
            "an object is used", 
            "a class is declared", 
            "an object goes out of scope."
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements about virtual base classes is correct?", 
        "options": [
            "It is used to provide multiple inheritance.", 
            "It is used to avoid multiple copies of base class in derived class.", 
            "It is used to allow multiple copies of base class in a derived class.", 
            "It allows private members of the base class to be inherited in the derived class."
        ], 
        "ans": "B"
    }, 
    {
        "q": "How many objects can be created from an abstract class?", 
        "options": [
            "Zero", 
            "One", 
            "Two", 
            "As many as we want"
        ], 
        "ans": "A"
    }, 
    {
        "q": "What does the class definitions in following code represent?\nclass Bike\n{\n    Engine objEng;\n};\nclass Engine\n{\n    float CC;\n};", 
        "options": [
            "kind of relationship", 
            "has a relationship", 
            "Inheritance", 
            "Both A and B"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements is correct when a class is inherited privately?", 
        "options": [
            "Public members of the base class become protected members of derived class.", 
            "Public members of the base class become private members of derived class.", 
            "Private members of the base class become private members of derived class.", 
            "Public members of the base class become public members of derived class."
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements is correct?", 
        "options": [
            "Data items in a class must be private.", 
            "Both data and functions can be either private or public.", 
            "Member functions of a class must be private.", 
            "Constructor of a class cannot be private."
        ], 
        "ans": "B"
    }, 
    {
        "q": "What does a class hierarchy depict?", 
        "options": [
            "It shows the relationships between the classes in the form of an organization chart.", 
            "It describes \"has a\" relationships.", 
            "It describes \"kind of\" relationships.", 
            "It shows the same relationship as a family tree."
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following can be overloaded?", 
        "options": [
            "Object", 
            "Functions", 
            "Operators", 
            "Both B and C"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following means \"The use of an object of one class in definition of another class\"?", 
        "options": [
            "Encapsulation", 
            "Inheritance", 
            "Composition", 
            "Abstraction"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following is the only technical difference between structures and classes in C++?", 
        "options": [
            "Member function and data are by default protected in structures but private in classes.", 
            "Member function and data are by default private in structures but public in classes.", 
            "Member function and data are by default public in structures but private in classes.", 
            "Member function and data are by default public in structures but protected in classes."
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements is correct about the program given below?\nclass Bix\n{\n    public:\n    static void MyFunction();\n};\nint main()\n{\n    void(*ptr)() = &Bix::MyFunction;\n    return 0; \n}", 
        "options": [
            "The program reports an error as pointer to member function cannot be defined outside the definition of class.", 
            "The program reports an error as pointer to static member function cannot be defined.", 
            "The program reports an error as pointer to member function cannot be defined without object.", 
            "The program reports linker error."
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following statements are correct for a static member function?\n  It can access only other static members of its class.\n  It can be called using the class name, instead of objects. \n", 
        "options": [
            "Only 1 is correct.", 
            "Only 2 is correct.", 
            "Both 1 and 2 are correct.", 
            "Both 1 and 2 are incorrect."
        ], 
        "ans": "C"
    }
]