[
    {
        "q": "Which  of the  following  statements  is incorrect  about delegate?", 
        "options": [
            "Delegates are reference types.", 
            "Delegates are object oriented.", 
            "Delegates are type-safe.", 
            "Delegates serve the same purpose as function pointers in C and pointers to member function operators in C++.", 
            "Only one method can be called using a delegate."
        ], 
        "ans": "E"
    }, 
    {
        "q": "In which of the following areas are delegates commonly used?\nRemoting\nSerialization\nFile Input/Output\nMultithreading\nEvent handling\n", 
        "options": [
            "1 and 2 only", 
            "1 and 5 only", 
            "1, 2 and 3 only", 
            "4 and 5 only", 
            "All of the above"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which   of   the   following   is   the   necessary   condition   for implementing delegates?", 
        "options": [
            "Class declaration", 
            "Inheritance", 
            "Run-time Polymorphism", 
            "Exceptions", 
            "Compile-time Polymorphism"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements are correct about the delegate declaration given below?\n    delegate void del(int i);\nOn declaring the delegate a class called del will get created.\nThe signature of del need not be same as the signature of the method that we intend to call using it.\nThe del class will be derived from the MulticastDelegate class.\nThe method that can be called using del should not be a static method.\nThe del class will contain a one-argument constructor and an lnvoke() method.\n", 
        "options": [
            "1, 2 and 3 only", 
            "1, 3 and 5 only", 
            "2 and 4 only", 
            "4 only", 
            "All of the above"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following is the correct way to call the function MyFun() of the Sample class given below?\nclass Sample\n{\n    public int MyFun(int i)\n    {\n        Console.WriteLine(\"Welcome to IndiaBIX.com !\" );\n        return 0;\n    }\n}", 
        "options": [
            "delegate void del(int i);\nSample s = new Sample();\ndeld = new del(ref s.MyFun);\nd(10);", 
            "delegate int del(int i);\nSample s = new Sample(.);\ndel = new delegate(ref MyFun);\ndel(10);", 
            "Sample s = new Sample();\ndelegate void del = new delegate(ref MyFun);\ndel(10);", 
            "delegate int del(int i);\ndel d;\nSample s = new Sample();\nd = new del(ref s.MyFun);\nd(10);"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following is the correct way to call subroutine MyFun() of the Sample class given below?\nclass Sample\n{\n    public void MyFun(int i, Single j)\n    {\n        Console.WriteLine(\"Welcome to IndiaBIX !\");\n    }\n}", 
        "options": [
            "delegate void del(int i);\nSample s = new Sample();\ndel d = new del(ref s.MyFun);\nd(10, 1.1f);", 
            "delegate void del(int i, Single j);\ndel d;\nSample s = new Sample();\nd = new del(ref s.MyFun);\nd(10, 1.1f);", 
            "Sample s = new Sample();\ndelegate void d = new del(ref MyFun);\nd(10, 1.1f);", 
            "delegate void del(int i, Single]);\nSample s = new Sample();\ndel = new delegate(ref MyFun);\ndel(10, 1.1f);"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements are correct about a delegate? \nInheritance is a prerequisite for using delegates.\nDelegates are type-safe.\nDelegates provide wrappers for function pointers.\nThe declaration of a delegate must match the signature of the method that we intend to call using it.\nFunctions called using delegates are always late-bound.\n", 
        "options": [
            "1 and 2 only", 
            "1, 2 and 3 only", 
            "2, 3 and 4 only", 
            "All of the above", 
            "None of the above"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements are correct about delegates?\nDelegates are not type-safe.\nDelegate is a user-defined type.\nOnly one method can be bound with one delegate object.  \nDelegates can be used to implement callback notification.\nDelegates permit execution of a method on a secondary thread in an asynchronous manner.\n", 
        "options": [
            "1 and 2 only", 
            "1, 2 and 3 only", 
            "2, 4 and 5 only", 
            "4 and 5 only", 
            "All of the above"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements are correct about delegates?", 
        "options": [
            "Delegates cannot be used to call a static method of a class.", 
            "Delegates cannot be used to call procedures that receive variable number of arguments.", 
            "If signatures of two methods are same they can be called through the same delegate object.", 
            "Delegates cannot be used to call an instance function. Delegates cannot be used to call an instance subroutine."
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following are the correct ways to declare a delegate for calling the function func() defined in the sample class given below?\nclass Sample\n{\n    public int func(int i, Single j)\n    {\n        /* Add code here. */\n    }\n}", 
        "options": [
            "delegate d(int i, Single j);", 
            "delegate void d(int, Single);", 
            "delegate int d(int i, Single j);", 
            "delegate void (int i, Single j);", 
            "delegate int sample.func(int i, Single j);"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Suppose on pushing a button an object is to be notified, but it is not known until runtime which object should be notified. Which of the following programming constructs should be used to implement this idea?", 
        "options": [
            "Attribute", 
            "Delegate", 
            "Namespace", 
            "Interface", 
            "Encapsulation"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements is incorrect about a delegate?", 
        "options": [
            "A single delegate can invoke more than one method.", 
            "Delegates can be shared.", 
            "Delegate is a value type.", 
            "Delegates are type-safe wrappers for function pointers.", 
            "The signature of a delegate must match the signature of the method that is to be called using it."
        ], 
        "ans": "C"
    }, 
    {
        "q": "Suppose a Generic class called SortObjects is to be made capable of sorting objects of any type (Integer, Single, Byte etc.). Which of the following programming constructs should be used to implement the comparision function?", 
        "options": [
            "Namespace", 
            "Interface", 
            "Encapsulation", 
            "Delegate", 
            "Attribute"
        ], 
        "ans": "D"
    }, 
    {
        "q": "With which of the following can the ref keyword be used? \nStatic data\nInstance data\nStatic function/subroutine\nInstance function/subroutine\n", 
        "options": [
            "1, 2", 
            "3, 4", 
            "1, 3", 
            "2, 4", 
            "All of the above"
        ], 
        "ans": "B"
    }
]