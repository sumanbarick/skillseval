[
    {
        "q": "Which of the following statements are correct about an enum used inC#.NET?\nBy default the first enumerator has the value equal to the number of elements present in the list.\nThe value of each successive enumerator is decreased by 1.\nAn enumerator contains white space in its name.\nA variable cannot be assigned to an enum element.\nValues of enum elements cannot be populated from a database.\n", 
        "options": [
            "1, 2", 
            "3, 4", 
            "4, 5", 
            "1, 4"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET code snippet given below?\nint a = 10; \nint b = 20; \nint c = 30;\nenum color: byte\n{\n    red = a, \n    green = b,\n    blue = c \n}", 
        "options": [
            "Variables cannot be assigned to enum elements.", 
            "Variables can be assigned to any one of the enum elements.", 
            "Variables can be assigned only to the first enum element.", 
            "Values assigned to enum elements must always be successive values.", 
            "Values assigned to enum elements must always begin with 0."
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements is true about an enum used in C#.NET?", 
        "options": [
            "An implicit cast is needed to convert from enum type to an integral type.", 
            "An enum variable cannot have a public access modifier.", 
            "An enum variable cannot have a private access modifier.", 
            "An enum variable can be defined inside a class or a namespace.", 
            "An enum variable cannot have a protected access modifier."
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following is the correct output for the C#.NET code snippet given below?\nenum color\n{\n    red,\n    green,\n    blue \n}\ncolor c; \nc = color.red; \nConsole.WriteLine(c);", 
        "options": [
            "1", 
            "-1", 
            "red", 
            "0", 
            "color.red"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements are correct about an enum used inC#.NET?\nTo use the keyword enum, we should either use [enum] or System.Enum.\nenum is a keyword.\nEnum is class declared in System.Type namespace.\nEnum is a class declared in the current project's root namespace.\nEnum is a class declared in System namespace.\n", 
        "options": [
            "1, 3", 
            "2, 4", 
            "2, 5", 
            "3, 4"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following will be the correct output for the C#.NET code snippet given below?\nenum color : int\n{\n    red = -3,\n    green,\n    blue \n}\nConsole.Write( (int) color.red + \", \"); \nConsole.Write( (int) color.green + \", \"); \nConsole.Write( (int) color.blue );", 
        "options": [
            "-3, -2, -1", 
            "-3, 0, 1", 
            "0, 1, 2", 
            "red, green, blue", 
            "color.red, color.green, color.blue"
        ], 
        "ans": "A"
    }, 
    {
        "q": "An enum that is declared inside a class, struct, namespace or interface is treated as public.", 
        "options": [
            "True", 
            "False"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET code snippet given below?\nenum per\n{\n    married, \n    unmarried, \n    divorced, \n    spinster\n}\nper.married = 10; \nConsole.WriteLine(per.unmarried);", 
        "options": [
            "The program will output a value 11.", 
            "The program will output a value 1.", 
            "The program will output a value 2.", 
            "The program will report an error since an enum element cannot be assigned a value outside the enum declaration.", 
            "The enum elements must be declared private."
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following is the correct output for the C#.NET code snippet given below?\nenum color: int\n{ \n    red,\n    green, \n    blue = 5, \n    cyan,\n    magenta = 10, \n    yellow \n}\nConsole.Write( (int) color.green + \", \" ); \nConsole.Write( (int) color.yellow );", 
        "options": [
            "2, 11", 
            "1, 11", 
            "2, 6", 
            "1, 5", 
            "None of the above"
        ], 
        "ans": "B"
    }, 
    {
        "q": "An enum can be declared inside a class, struct, namespace or interface.", 
        "options": [
            "True", 
            "False"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following CANNOT be used as an underlying datatype for an enum in C#.NET?", 
        "options": [
            "byte", 
            "short", 
            "float", 
            "int"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements are correct about enum used in C#.NET?\nEvery enum is derived from an Object class.\nEvery enum is a value type.\nThere does not exist a way to print an element of an enum as a string.\nEvery enum is a reference type.\nThe default underlying datatype of an enum is int.\n", 
        "options": [
            "1, 2, 5", 
            "1, 4", 
            "3, 5", 
            "2, 3, 4"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET code snippet given below?\nenum color : byte\n{\n    red = 500,\n    green = 1000,\n    blue = 1500\n}", 
        "options": [
            "byte values cannot be assigned to enum elements.", 
            "enum elements should always take successive values.", 
            "Since 500, 1000, 1500 exceed the valid range of byte compiler will report an error.", 
            "enum must always be of int type.", 
            "enum elements should be declared as private."
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following is the correct output for the C#.NET code snippet given below?\nenum color\n{\n    red,\n    green,\n    blue \n}\ncolor c = color.red;\nType t;\nt = c.GetType();\nstring[ ]str;\nstr = Enum.GetNames(t);\nConsole.WriteLine(str[ 0 ]);", 
        "options": [
            "red", 
            "0", 
            "1", 
            "-1", 
            "color.red"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements are correct about the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n( \nclass Sample\n{ \n    private enum color : int\n    { \n        red, \n        green, \n        blue\n    }\n    public void fun()\n    {\n        Console.WriteLine(color.red); \n    }\n}\nclass Program\n{ \n    static void Main(string[ ] args)\n    { \n        // Use enum color here\n    } \n} \n}\nTo define a variable of type enum color in Main(), we should use the statement, color c; .\nenum color being private it cannot be used in Main().\nWe must declare enum color as public to be able to use it outside the class Sample.\nTo define a variable of type enum color in Main(), we should use the statement, Sample.color c; .\nWe must declare private enum color outside the class to be able to use it in Main().\n", 
        "options": [
            "1, 2, 3", 
            "2, 3, 4", 
            "3, 4", 
            "4, 5"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements is correct about an enum used in C#.NET?", 
        "options": [
            "enum is a reference type.", 
            "enum is a value type.", 
            "Whether it a value type or a reference type depends upon size.", 
            "Whether it a value type or a reference type depends upon a Project Setting made in Visual Stiiclio.NET.", 
            "We can programmatically control whether it is a value type or a reference type."
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements are correct about an enum used in C#.NET?\nAn enum can be declared inside a class.\nAn enum can take Single, Double or Decimal values.\nAn enum can be declared outside a class.\nAn enum can be declared inside/outside a namespace.\nAn object can be assigned to an enum variable.\n", 
        "options": [
            "1, 3, 4", 
            "2, 5", 
            "3, 4", 
            "2, 4, 5"
        ], 
        "ans": "A"
    }
]