[
    {
        "q": "Which of the following is NOT a .NET Exception class?", 
        "options": [
            "Exception", 
            "StackMemoryException", 
            "DivideByZeroException", 
            "OutOfMemoryException", 
            "InvalidOperationException"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements is correct about an Exception?", 
        "options": [
            "It occurs during compilation.", 
            "It occurs during linking.", 
            "It occurs at run-time.", 
            "It occurs during Just-In-Time compilation.", 
            "It occurs during loading of the program."
        ], 
        "ans": "C"
    }, 
    {
        "q": "In C#.NET if we do not catch the exception thrown at runtime then which of the following will catch it?", 
        "options": [
            "Compiler", 
            "CLR", 
            "Linker", 
            "Loader", 
            "Operating system"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET program given below?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index = 6;\n            int val = 44;\n            int[] a = new int[5];\n            try\n            {\n                a[index] = val ;\n            }    \n            catch(IndexOutOfRangeException e)\n            {\n                Console.Write(\"Index out of bounds \");\n            }\n            Console.Write(\"Remaining program\");\n        }\n    }\n}", 
        "options": [
            "Value 44 will get assigned to a[6].", 
            "It will output: Index out of bounds", 
            "It will output: Remaining program", 
            "It will not produce any output.", 
            "It will output: Index out of bounds Remaining program"
        ], 
        "ans": "E"
    }, 
    {
        "q": "Which of the following statements are correct about exception handling in C#.NET?\nIf an exception occurs then the program terminates abruptly without getting any chance to recover from the exception.\nNo matter whether an exception occurs or not, the statements in the finally clause (if present) will get executed.\nA program can contain multiple finally clauses.\nA finally clause is written outside the try block.\nfinally clause is used to perform clean up operations like closing the network/database connections.\n", 
        "options": [
            "1 only", 
            "2 only", 
            "2 and 5 only", 
            "3 and 4 only", 
            "None of the above"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements are correct about exception handling in C#.NET?\nIf our program does not catch an exception then the .NET CLR catches it.\nIt is possible to create user-defined exceptions.\nAll types of exceptions can be caught using the Exception class.\nCLRExceptions is the base class for all exception classes.\nFor every try block there must be a corresponding finally block.\n", 
        "options": [
            "1 and 2 only", 
            "1, 2 and 3 only", 
            "4 and 5 only", 
            "All of the above", 
            "None of the above"
        ], 
        "ans": "B"
    }, 
    {
        "q": "Which of the following statements are correct about the exception reported below?\nUnhandled Exception: System.lndexOutOfRangeException:\nIndex was outside the bounds of the array:\nat IndiabixConsoleApplication.MyProgram.SetVal(Int32 index, Int32 val) in\nD:\\Sample\\IndiabixConsoleApplication\\MyProgram.cs:line 26\nat IndiabixConsoleApplication.MyProgram.Main(String[] args) in\nD:\\Sample\\IndiabixConsoleApplication\\MyProgram.cs:line 20\nThe CLR failed to handle the exception. \nThe class MyProgram belongs to the namespace MyProgram.\nThe function SetVal() was called from Main() in line number 20.\nThe exception occurred in line number 26 in the function SetVal()\nThe runtime exception occurred in the project IndiabixConsoleApplication.\n", 
        "options": [
            "1 only", 
            "1 and 2 only", 
            "3, 4 and 5 only", 
            "All of the above", 
            "None of the above"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following is the Object Oriented way of handling run-time errors?", 
        "options": [
            "OnError", 
            "HERESULT", 
            "Exceptions", 
            "Error codes", 
            "Setjump and Longjump"
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET program given below if a value \"6\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index; \n            int val = 44;\n            int[] a = new int[5];\n            try\n            {\n                Console.Write(\"Enter a number:\");\n                index = Convert.Tolnt32(Console.ReadLine());\n                a[index] = val;\n            }\n            catch(FormatException e)\n            {\n                Console.Write(\"Bad Format\");\n            }\n            catch(IndexOutOfRangeException e)\n            {\n                Console.Write(\"Index out of bounds\");\n            }\n            Console.Write(\"Remaining program\");\n        }\n    }\n}", 
        "options": [
            "It will output: Index out of bounds Remaining program", 
            "It will output: Bad Format Remaining program", 
            "It will output: Bad Format", 
            "It will output: Remaining program", 
            "It will output: Index out of bounds"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements are correct about the exception reported below?\nUnhandled Exception: System.lndexOutOfRangeException:\nIndex was outside the bounds of the array.\nat IndiabixConsoleApplication.Program.Main(String[] args) in \nD:\\ConsoleApplication\\Program.cs:line 14\nThe program did not handle an exception called IndexOutOfRangeException.\nThe program execution continued after the exception occurred.\nThe exception occurred in line number 14.\nIn line number 14, the program attempted to access an array element which was beyond the bounds of the array.\nThe CLR could not handle the exception.\n", 
        "options": [
            "1 only", 
            "1, 2 and 3 only", 
            "2 and 5 only", 
            "1, 3 and 4 only", 
            "None of the above"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following statements are correct about exception handling in C#.NET?\ntry blocks cannot be nested.\nIn one function, there can be only one try block.\nAn exception must be caught in the same function in which it is thrown.\nAll values set up in the exception object are available in the catch block.\nWhile throwing a user-defined exception multiple values can be set in the exception, object.\n", 
        "options": [
            "1 only", 
            "1 and 2 only", 
            "3 only", 
            "4 and 5 only", 
            "All of the above"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Exceptions can be thrown even from a constructor, whereas error codes cannot be returned from a constructor.", 
        "options": [
            "True", 
            "False"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET program given below if a value \"6\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main (string[] args)\n        {\n            int index; \n            int val = 66; \n            int[] a = new int[5]; \n            try\n            {\n                Consote.Write(\"Enter a number: \"); \n                index = Convert.ToInt32(Console.ReadLine()); \n                a[index] = val;\n            }\n            catch(Exception e)\n            {\n                Console.Write(\"Exception occurred \");\n            }\n            Console.Write(\"Remaining program \");\n        }\n    }\n}", 
        "options": [
            "It will output: Exception occurred", 
            "It will output: Remaining program", 
            "It will output: Exception occurred Remaining program", 
            "It will output: Remaining program Exception occurred", 
            "The value 66 will get assigned to a[6]."
        ], 
        "ans": "C"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET program given below if a value \"ABCD\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index; \n            int val = 55; \n            int[] a = new int[5]; \n            try\n            {\n                Console.Write(\"Enter a number: \");\n                index = Convert.ToInt32(Console.ReadLine());\n                a[index] = val;\n            }\n            catch(FormatException e)\n            {\n                Console.Write(\"Bad Format \");\n            }\n            catch(IndexOutOfRangeException e)\n            {\n                Console.Write(\"Index out of bounds \");\n            }\n            Console.Write(\"Remaining program \");\n        }\n    }\n}", 
        "options": [
            "It will output: Bad Format", 
            "It will output: Remaining program", 
            "It will output: Index out of bounds", 
            "It will output: Bad Format Remaining program", 
            "It will output: Index out of bounds Remaining program"
        ], 
        "ans": "D"
    }, 
    {
        "q": "All code inside finally block is guaranteed to execute irrespective of whether an exception occurs in the protected block or not.", 
        "options": [
            "True", 
            "False"
        ], 
        "ans": "A"
    }, 
    {
        "q": "Which of the following is NOT an Exception?", 
        "options": [
            "StackOverflow", 
            "Division By Zero", 
            "Insufficient Memory", 
            "Incorrect Arithmetic Expression", 
            "Arithmetic overflow or underflow"
        ], 
        "ans": "D"
    }, 
    {
        "q": "Which of the following statements is correct about the C#.NET program given below if a value \"ABCD\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index; \n            int vat = 88;\n            int[] a = new int(5];\n            try\n            {\n                Console.Write(\"Enter a number: \");\n                index = Convert.Toint32(Console.ReadLine());\n                a[index] = val;\n            }\n            catch(Exception e)\n            {\n                Console.Write(\"Exception occurred\");\n            }\n            Console.Write(\"Remaining program\");\n        }\n    }\n}", 
        "options": [
            "It will output: Exception occurred", 
            "It will output: Remaining program", 
            "It will output: Remaining program Exception occurred", 
            "It will output: Exception occurred Remaining program", 
            "The value 88 will get assigned to a[0]."
        ], 
        "ans": "D"
    }, 
    {
        "q": "It is compulsory for all classes whose objects can be thrown with throw statement to be derived from System.Exception class.", 
        "options": [
            "True", 
            "False"
        ], 
        "ans": "B"
    }
]