[{
    "q": "What will be the output of the program?\npublic class Test \n{  \n    public static void main(String[] args) \n    { \n        int x = 0;  \n        assert (x > 0) ? \"assertion failed\" : \"assertion passed\" ; \n        System.out.println(\"finished\");  \n    } \n}\n",
    "options": ["finished", "Compiliation fails.", "An AssertionError is thrown and finished is output.", "An AssertionError is thrown with the message \"assertion failed.\""],
    "ans": "B"
}, {
    "q": "public class Test \n{ \n    public void foo() \n    {\n        assert false; /* Line 5 */\n        assert false; /* Line 6 */\n    } \n    public void bar()\n    {\n        while(true)\n        {\n            assert false; /* Line 12 */\n        } \n        assert false;  /* Line 14 */\n    } \n}\nWhat causes compilation to fail?",
    "options": ["Line 5", "Line 6", "Line 12", "Line 14"],
    "ans": "D"
}, {
    "q": "What will be the output of the program?\npublic class Test \n{\n    public static int y;\n    public static void foo(int x) \n    {\n        System.out.print(\"foo \");\n        y = x;\n    }\n    public static int bar(int z) \n    {\n        System.out.print(\"bar \");\n        return y = z;\n    }\n    public static void main(String [] args ) \n    {\n        int t = 0;\n        assert t > 0 : bar(7);\n        assert t > 1 : foo(8); /* Line 18 */\n        System.out.println(\"done \");\n    }\n}\n",
    "options": ["bar", "bar done", "foo done", "Compilation fails"],
    "ans": "D"
}, {
    "q": "What will be the output of the program (when you run with the -ea option) ?\npublic class Test \n{  \n    public static void main(String[] args) \n    {\n        int x = 0;  \n        assert (x > 0) : \"assertion failed\"; /* Line 6 */\n        System.out.println(\"finished\"); \n    } \n}\n",
    "options": ["finished", "Compilation fails.", "An AssertionError is thrown.", "An AssertionError is thrown and finished is output."],
    "ans": "C"
}, {
    "q": "public class Test2 \n{\n    public static int x;\n    public static int foo(int y) \n    {\n        return y * 2;\n    }\n    public static void main(String [] args) \n    {\n        int z = 5;\n        assert z > 0; /* Line 11 */\n        assert z > 2: foo(z); /* Line 12 */\n        if ( z < 7 )\n            assert z > 4; /* Line 14 */\n\n        switch (z) \n        {\n            case 4: System.out.println(\"4 \");\n            case 5: System.out.println(\"5 \");\n            default: assert z < 10;\n        }\n\n        if ( z < 10 )\n            assert z > 4: z++; /* Line 22 */\n        System.out.println(z);\n    }\n}\n\nwhich line is an example of an inappropriate use of assertions?",
    "options": ["Line 11", "Line 12", "Line 14", "Line 22"],
    "ans": "D"
}, {
    "q": "You want subclasses in any package to have access to members of a superclass. Which is the most restrictive access that accomplishes this objective?",
    "options": ["public", "private", "protected", "transient"],
    "ans": "C"
}, {
    "q": "public class Outer \n{ \n    public void someOuterMethod() \n    {\n        //Line 5 \n    } \n    public class Inner { } \n    \n    public static void main(String[] argv) \n    {\n        Outer ot = new Outer(); \n        //Line 10\n    } \n} \n\nWhich of the following code fragments inserted, will allow to compile?",
    "options": ["new Inner(); //At line 5", "new Inner(); //At line 10", "new ot.Inner(); //At line 10", "new Outer.Inner(); //At line 10"],
    "ans": "A"
}, {
    "q": "interface Base \n{\n    boolean m1 ();\n    byte m2(short s);\n}\n\nwhich two code fragments will compile?\n\ninterface Base2 implements Base {}\n\nabstract class Class2 extends Base \n{ public boolean m1(){ return true; }}\n\nabstract class Class2 implements Base {}\nabstract class Class2 implements Base  \n{ public boolean m1(){ return (7 > 4); }}\nabstract class Class2 implements Base \n{ protected boolean m1(){ return (5 > 7) }}\n",
    "options": ["1 and 2", "2 and 3", "3 and 4", "1 and 5"],
    "ans": "C"
}, {
    "q": "Which three form part of correct array declarations?\n\npublic int a [ ]\nstatic int [ ] a\npublic [ ] int a\nprivate int a [3]\nprivate int [3] a [ ]\npublic final int [ ] a\n",
    "options": ["1, 3, 4", "2, 4, 5", "1, 2, 6", "2, 5, 6"],
    "ans": "C"
}, {
    "q": "public class Test { }\n\nWhat is the prototype of the default constructor?",
    "options": ["Test( )", "Test(void)", "public Test( )", "public Test(void)"],
    "ans": "C"
}, {
    "q": "What is the most restrictive access modifier that will allow members of one class to have access to members of another class in the same package?",
    "options": ["public", "abstract", "protected", "synchronized", "default access"],
    "ans": "E"
}, {
    "q": "Which of the following is/are legal method declarations?\n\nprotected abstract void m1();\nstatic final void m1(){}\nsynchronized public final void m1() {}\nprivate native void m1();\n",
    "options": ["1 and 3", "2 and 4", "1 only", "All of them are legal declarations."],
    "ans": "D"
}, {
    "q": "Which cause a compiler error?",
    "options": ["int[ ] scores = {3, 5, 7};", "int [ ][ ] scores = {2,7,6}, {9,3,45};", "String cats[ ] = {\"Fluffy\", \"Spot\", \"Zeus\"};", "boolean results[ ] = new boolean [] {true, false, true};", "Integer results[ ] = {new Integer(3), new Integer(5), new Integer(8)};"],
    "ans": "B"
}, {
    "q": "Which three are valid method signatures in an interface?\n\nprivate int getArea();\npublic float getVol(float x);\npublic void main(String [] args);\npublic static void main(String [] args);\nboolean setFlag(Boolean [] test);\n",
    "options": ["1 and 2", "2, 3 and 5", "3, 4, and 5", "2 and 4"],
    "ans": "B"
}, {
    "q": "You want a class to have access to members of another class in the same package. Which is the most restrictive access that accomplishes this objective?",
    "options": ["public", "private", "protected", "default access"],
    "ans": "D"
}, {
    "q": "What is the widest valid returnType for methodA in line 3? \npublic class ReturnIt \n{ \n    returnType methodA(byte x, double y) /* Line 3 */\n    { \n        return (long)x / y * 2; \n    } \n}\n",
    "options": ["int", "byte", "long", "double"],
    "ans": "D"
}, {
    "q": "class A \n{  \n    protected int method1(int a, int b) \n    {\n        return 0; \n    } \n}\n\nWhich is valid in a class that extends class A?",
    "options": ["public int method1(int a, int b) {return 0; }", "private int method1(int a, int b) { return 0; }", "public short method1(int a, int b) { return 0; }", "static protected int method1(int a, int b) { return 0; }"],
    "ans": "A"
}, {
    "q": "Which one creates an instance of an array?",
    "options": ["int[ ] ia = new int[15];", "float fa = new float[20];", "char[ ] ca = \"Some String\";", "int ia[ ] [ ] = { 4, 5, 6 }, { 1,2,3 };"],
    "ans": "A"
}, {
    "q": "Which two of the following are legal declarations for nonnested classes and interfaces?\n\nfinal abstract class Test {}\npublic static interface Test {}\nfinal public class Test {}\nprotected abstract class Test {}\nprotected interface Test {}\nabstract public class Test {}\n",
    "options": ["1 and 4", "2 and 5", "3 and 6", "4 and 6"],
    "ans": "C"
}, {
    "q": "Which of the following class level (nonlocal) variable declarations will not compile?",
    "options": ["protected int a;", "transient int b = 3;", "private synchronized int e;", "volatile int d;"],
    "ans": "C"
}, {
    "q": "Which two cause a compiler error?\n\nfloat[ ] f = new float(3);\nfloat f2[ ] = new float[ ];\nfloat[ ]f1 = new float[3];\nfloat f3[ ] = new float[3];\nfloat f5[ ] = {1.0f, 2.0f, 2.0f};\n",
    "options": ["2, 4", "3, 5", "4, 5", "1, 2"],
    "ans": "D"
}, {
    "q": "Given a method in a protected class, what access modifier do you use to restrict access to that method to only the other members of the same class?",
    "options": ["final", "static", "private", "protected", "volatile"],
    "ans": "C"
}, {
    "q": "Which is a valid declaration within an interface?",
    "options": ["public static short stop = 23;", "protected short stop = 23;", "transient short stop = 23;", "final void madness(short stop);"],
    "ans": "A"
}, {
    "q": "What will be the output of the program?\npublic class Foo \n{  \n    public static void main(String[] args) \n    {\n        try \n        { \n            return; \n        } \n        finally \n        {\n            System.out.println( \"Finally\" ); \n        } \n    } \n}\n",
    "options": ["Finally", "Compilation fails.", "The code runs with no output.", "An exception is thrown at runtime."],
    "ans": "A"
}, {
    "q": "What will be the output of the program?\ntry \n{ \n    int x = 0; \n    int y = 5 / x; \n} \ncatch (Exception e) \n{\n    System.out.println(\"Exception\"); \n} \ncatch (ArithmeticException ae) \n{\n    System.out.println(\" Arithmetic Exception\"); \n} \nSystem.out.println(\"finished\");\n",
    "options": ["finished", "Exception", "Compilation fails.", "Arithmetic Exception"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\npublic class X \n{  \n    public static void main(String [] args) \n    {\n        try \n        {\n            badMethod();  \n            System.out.print(\"A\"); \n        }  \n        catch (Exception ex) \n        {\n            System.out.print(\"B\");  \n        } \n        finally \n        {\n            System.out.print(\"C\"); \n        } \n        System.out.print(\"D\"); \n    }  \n    public static void badMethod() \n    {\n        throw new Error(); /* Line 22 */\n    } \n}\n",
    "options": ["ABCD", "Compilation fails.", "C is printed before exiting with an error message.", "BC is printed before exiting with an error message."],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\npublic class X \n{  \n    public static void main(String [] args) \n    {\n        try \n        {\n            badMethod();  \n            System.out.print(\"A\");  \n        } \n        catch (RuntimeException ex) /* Line 10 */\n        { \n            System.out.print(\"B\"); \n        } \n        catch (Exception ex1) \n        { \n            System.out.print(\"C\"); \n        } \n        finally \n        {\n            System.out.print(\"D\"); \n        } \n        System.out.print(\"E\"); \n    } \n    public static void badMethod() \n    { \n        throw new RuntimeException(); \n    } \n}\n",
    "options": ["BD", "BCD", "BDE", "BCDE"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\npublic class RTExcept \n{\n    public static void throwit () \n    {\n        System.out.print(\"throwit \");\n        throw new RuntimeException();\n    }\n    public static void main(String [] args) \n    {\n        try \n        {\n            System.out.print(\"hello \");\n            throwit();\n        }\n        catch (Exception re ) \n        {\n            System.out.print(\"caught \");\n        }\n        finally \n        {\n            System.out.print(\"finally \");\n        }\n        System.out.println(\"after \");\n    }\n}\n",
    "options": ["hello throwit caught", "Compilation fails", "hello throwit RuntimeException caught after", "hello throwit caught finally after"],
    "ans": "D"
}, {
    "q": "What will be the output of the program?\npublic class Test \n{  \n    public static void aMethod() throws Exception \n    {\n        try /* Line 5 */\n        {\n            throw new Exception(); /* Line 7 */\n        } \n        finally /* Line 9 */\n        {\n            System.out.print(\"finally \"); /* Line 11 */\n        } \n    } \n    public static void main(String args[]) \n    {\n        try \n        {\n            aMethod();  \n        } \n        catch (Exception e) /* Line 20 */\n        {\n            System.out.print(\"exception \"); \n        } \n        System.out.print(\"finished\"); /* Line 24 */\n    } \n}\n",
    "options": ["finally", "exception finished", "finally exception finished", "Compilation fails"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\npublic class X \n{ \n    public static void main(String [] args) \n    {\n        try \n        {\n            badMethod();  \n            System.out.print(\"A\"); \n        }  \n        catch (Exception ex) \n        {\n            System.out.print(\"B\"); \n        }  \n        finally \n        {\n            System.out.print(\"C\"); \n        }  \n        System.out.print(\"D\"); \n    }  \n    public static void badMethod() {} \n} \n",
    "options": ["AC", "BC", "ACD", "ABCD"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\npublic class X \n{  \n    public static void main(String [] args) \n    {\n        try \n        {\n            badMethod(); /* Line 7 */\n            System.out.print(\"A\"); \n        } \n        catch (Exception ex) /* Line 10 */\n        {\n            System.out.print(\"B\"); /* Line 12 */\n        } \n        finally /* Line 14 */\n        {\n            System.out.print(\"C\"); /* Line 16 */\n        }  \n        System.out.print(\"D\"); /* Line 18 */\n    } \n    public static void badMethod() \n    {\n        throw new RuntimeException(); \n    } \n}\n",
    "options": ["AB", "BC", "ABC", "BCD"],
    "ans": "D"
}, {
    "q": "What will be the output of the program?\npublic class MyProgram \n{\n    public static void main(String args[])\n    {\n        try \n        {\n            System.out.print(\"Hello world \");\n        }\n        finally \n        {\n            System.out.println(\"Finally executing \");\n        }\n    }\n}\n",
    "options": ["Nothing. The program will not compile because no exceptions are specified.", "Nothing. The program will not compile because no catch clauses are specified.", "Hello world.", "Hello world Finally executing"],
    "ans": "D"
}, {
    "q": "What will be the output of the program?\nclass Exc0 extends Exception { } \nclass Exc1 extends Exc0 { } /* Line 2 */\npublic class Test \n{  \n    public static void main(String args[]) \n    { \n        try \n        {  \n            throw new Exc1(); /* Line 9 */\n        } \n        catch (Exc0 e0) /* Line 11 */\n        {\n            System.out.println(\"Ex0 caught\"); \n        } \n        catch (Exception e) \n        {\n            System.out.println(\"exception caught\");  \n        } \n    } \n}\n",
    "options": ["Ex0 caught", "exception caught", "Compilation fails because of an error at line 2.", "Compilation fails because of an error at line 9."],
    "ans": "A"
}, {
    "q": "public void foo( boolean a, boolean b)\n{ \n    if( a ) \n    {\n        System.out.println(\"A\"); /* Line 5 */\n    } \n    else if(a && b) /* Line 7 */\n    { \n        System.out.println( \"A && B\"); \n    } \n    else /* Line 11 */\n    { \n        if ( !b ) \n        {\n            System.out.println( \"notB\") ;\n        } \n        else \n        {\n            System.out.println( \"ELSE\" ) ; \n        } \n    } \n}\n",
    "options": ["If a is true and b is true then the output is \"A && B\"", "If a is true and b is false then the output is \"notB\"", "If a is false and b is true then the output is \"ELSE\"", "If a is false and b is false then the output is \"ELSE\""],
    "ans": "C"
}, {
    "q": "switch(x) \n{ \n    default:  \n        System.out.println(\"Hello\"); \n}\n\nWhich two are acceptable types for x?\n\nbyte\nlong\nchar\nfloat\nShort\nLong\n",
    "options": ["1 and 3", "2 and 4", "3 and 5", "4 and 6"],
    "ans": "A"
}, {
    "q": "public void test(int x) \n{ \n    int odd = 1; \n    if(odd) /* Line 4 */\n    {\n        System.out.println(\"odd\"); \n    } \n    else \n    {\n        System.out.println(\"even\"); \n    } \n}\n\nWhich statement is true?",
    "options": ["Compilation fails.", "\"odd\" will always be output.", "\"even\" will always be output.", "\"odd\" will be output for odd values of x, and \"even\" for even values."],
    "ans": "A"
}, {
    "q": "public class While \n{\n    public void loop() \n    {\n        int x= 0;\n        while ( 1 ) /* Line 6 */\n        {\n            System.out.print(\"x plus one is \" + (x + 1)); /* Line 8 */\n        }\n    }\n}\n\nWhich statement is true?",
    "options": ["There is a syntax error on line 1.", "There are syntax errors on lines 1 and 6.", "There are syntax errors on lines 1, 6, and 8.", "There is a syntax error on line 6."],
    "ans": "D"
}, {
    "q": "void start() {  \n    A a = new A(); \n    B b = new B(); \n    a.s(b);  \n    b = null; /* Line 5 */\n    a = null;  /* Line 6 */\n    System.out.println(\"start completed\"); /* Line 7 */\n} \n\nWhen is the B object, created in line 3, eligible for garbage collection?",
    "options": ["after line 5", "after line 6", "after line 7", "There is no way to be absolutely certain."],
    "ans": "D"
}, {
    "q": "class HappyGarbage01 \n{ \n    public static void main(String args[]) \n    {\n        HappyGarbage01 h = new HappyGarbage01(); \n        h.methodA(); /* Line 6 */\n    } \n    Object methodA() \n    {\n        Object obj1 = new Object(); \n        Object [] obj2 = new Object[1]; \n        obj2[0] = obj1; \n        obj1 = null; \n        return obj2[0]; \n    } \n}\n\nWhere will be the most chance of the garbage collector being invoked?",
    "options": ["After line 9", "After line 10", "After line 11", "Garbage collector never invoked in methodA()"],
    "ans": "D"
}, {
    "q": "class Bar { } \nclass Test \n{  \n    Bar doBar() \n    {\n        Bar b = new Bar(); /* Line 6 */\n        return b; /* Line 7 */\n    } \n    public static void main (String args[]) \n    { \n        Test t = new Test();  /* Line 11 */\n        Bar newBar = t.doBar();  /* Line 12 */\n        System.out.println(\"newBar\"); \n        newBar = new Bar(); /* Line 14 */\n        System.out.println(\"finishing\"); /* Line 15 */\n    } \n}\n\nAt what point is the Bar object, created on line 6, eligible for garbage collection?",
    "options": ["after line 12", "after line 14", "after line 7, when doBar() completes", "after line 15, when main() completes"],
    "ans": "B"
}, {
    "q": "class Test \n{  \n    private Demo d; \n    void start() \n    {  \n        d = new Demo(); \n        this.takeDemo(d); /* Line 7 */\n    } /* Line 8 */\n    void takeDemo(Demo demo) \n    { \n        demo = null;  \n        demo = new Demo(); \n    } \n}\n\nWhen is the Demo object eligible for garbage collection?",
    "options": ["After line 7", "After line 8", "After the start() method completes", "When the instance running this code is made eligible for garbage collection."],
    "ans": "D"
}, {
    "q": "public class X \n{\n    public static void main(String [] args) \n    {\n        X x = new X();\n        X x2 = m1(x); /* Line 6 */\n        X x4 = new X();\n        x2 = x4; /* Line 8 */\n        doComplexStuff();\n    }\n    static X m1(X mx) \n    {\n        mx = new X();\n        return mx;\n    }\n}\n\nAfter line 8 runs. how many objects are eligible for garbage collection?",
    "options": ["0  ", "1", "2", "3"],
    "ans": "B"
}, {
    "q": "public Object m() \n{  \n    Object o = new Float(3.14F); \n    Object [] oa = new Object[l];\n    oa[0] = o; /* Line 5 */\n    o = null;  /* Line 6 */\n    oa[0] = null; /* Line 7 */\n    return o; /* Line 8 */\n}\n\nWhen is the Float object, created in line 3, eligible for garbage collection?",
    "options": ["just after line 5", "just after line 6", "just after line 7", "just after line 8"],
    "ans": "C"
}, {
    "q": "class X2 \r\n{\r\n    public X2 x;\r\n    public static void main(String [] args) \r\n    {\r\n        X2 x2 = new X2();  /* Line 6 */\r\n        X2 x3 = new X2();  /* Line 7 */\r\n        x2.x = x3;\r\n        x3.x = x2;\r\n        x2 = new X2();\r\n        x3 = x2; /* Line 11 */\r\n        doComplexStuff();\r\n    }\r\n}\r\n\r\nafter line 11 runs, how many objects are eligible for garbage collection?",
    "options": ["0", "1", "2", "3"],
    "ans": "C"
}, {
    "q": "What allows the programmer to destroy an object x?",
    "options": ["x.delete()", "x.finalize()", "Runtime.getRuntime().gc()", "Only the garbage collection system can destroy an object."],
    "ans": "D"
}, {
    "q": "Which is true about an anonymous inner class?",
    "options": ["It can extend exactly one class and implement exactly one interface.", "It can extend exactly one class and can implement multiple interfaces.", "It can extend exactly one class or implement exactly one interface.", "It can implement multiple interfaces regardless of whether it also extends a class."],
    "ans": "C"
}, {
    "q": "class Boo \n{\n    Boo(String s) { }\n    Boo() { }\n}\nclass Bar extends Boo \n{\n    Bar() { }\n    Bar(String s) {super(s);}\n    void zoo() \n    {\n    // insert code here\n    }\n}\n\nwhich one create an anonymous inner class from within class Bar?",
    "options": ["Boo f = new Boo(24) { };", "Boo f = new Bar() { };", "Bar f = new Boo(String s) { };", "Boo f = new Boo.Bar(String s) { };"],
    "ans": "B"
}, {
    "q": "Which is true about a method-local inner class?",
    "options": ["It must be marked final.", "It can be marked abstract.", "It can be marked public.", "It can be marked static."],
    "ans": "B"
}, {
    "q": "Which statement is true about a static nested class?",
    "options": ["You must have a reference to an instance of the enclosing class in order to instantiate it.", "It does not have access to nonstatic members of the enclosing class.", "It's variables and methods must be static.", "It must extend the enclosing class."],
    "ans": "B"
}, {
    "q": "Which constructs an anonymous inner class instance?",
    "options": ["Runnable r = new Runnable() { };", "Runnable r = new Runnable(public void run() { });", "Runnable r = new Runnable { public void run(){}};", "System.out.println(new Runnable() {public void run() { }});"],
    "ans": "D"
}, {
    "q": "class Foo \n{\n    class Bar{ }\n}\nclass Test \n{\n    public static void main (String [] args) \n    {\n        Foo f = new Foo();\n        /* Line 10: Missing statement ? */\n    }\n}\n\nwhich statement, inserted at line 10, creates an instance of Bar?",
    "options": ["Foo.Bar b = new Foo.Bar();", "Foo.Bar b = f.new Bar();", "Bar b = new f.Bar();", "Bar b = f.new Bar();"],
    "ans": "B"
}, {
    "q": "public class MyOuter \n{\n    public static class MyInner \n    {\n        public static void foo() { }\n    }\n}\n \nwhich statement, if placed in a class other than MyOuter or MyInner, instantiates an instance of the nested class?",
    "options": ["MyOuter.MyInner m = new MyOuter.MyInner();", "MyOuter.MyInner mi = new MyInner();", "MyOuter m = new MyOuter();MyOuter.MyInner mi = m.new MyOuter.MyInner();", "MyInner mi = new MyOuter.MyInner();"],
    "ans": "A"
}, {
    "q": "What is the value of \"d\" after this line of code has been executed?\ndouble d = Math.round ( 2.5 + Math.random() );",
    "options": ["2", "3", "4", "2.5"],
    "ans": "B"
}, {
    "q": "Which of the following would compile without error?",
    "options": ["int a = Math.abs(-5);", "int b = Math.abs(5.0);", "int c = Math.abs(5.5F);", "int d = Math.abs(5L);"],
    "ans": "A"
}, {
    "q": "Which of the following are valid calls to Math.max?\n\nMath.max(1,4)\nMath.max(2.3, 5)\nMath.max(1, 3, 5, 7)\nMath.max(-1.5, -2.8f)\n",
    "options": ["1, 2 and 4", "2, 3 and 4", "1, 2 and 3", "3 and 4"],
    "ans": "A"
}, {
    "q": "public class Myfile \n{ \n    public static void main (String[] args) \n    {\n        String biz = args[1]; \n        String baz = args[2]; \n        String rip = args[3]; \n        System.out.println(\"Arg is \" + rip); \n    } \n}\n\nSelect how you would start the program to cause it to print: Arg is 2",
    "options": ["java Myfile 222", "java Myfile 1 2 2 3 4", "java Myfile 1 3 2 2", "java Myfile 0 1 2 3"],
    "ans": "C"
}, {
    "q": "Which four options describe the correct default values for array elements of the types indicated?\n\nint -> 0\nString -> \"null\"\nDog -> null\nchar -> '\\u0000'\nfloat -> 0.0f\nboolean -> true\n",
    "options": ["1, 2, 3, 4", "1, 3, 4, 5", "2, 4, 5, 6", "3, 4, 5, 6"],
    "ans": "B"
}, {
    "q": "Which one of these lists contains only Java programming language keywords?",
    "options": ["class, if, void, long, Int, continue", "goto, instanceof, native, finally, default, throws", "try, virtual, throw, final, volatile, transient", "strictfp, constant, super, implements, do", "byte, break, assert, switch, include"],
    "ans": "B"
}, {
    "q": "Which will legally declare, construct, and initialize an array?",
    "options": ["int [] myList = {\"1\", \"2\", \"3\"};", "int [] myList = (5, 8, 2);", "int myList [] [] = {4,9,7,0};", "int myList [] = {4, 3, 7};"],
    "ans": "D"
}, {
    "q": "Which is a reserved word in the Java programming language?",
    "options": ["method", "native", "subclasses", "reference", "array"],
    "ans": "B"
}, {
    "q": "Which is a valid keyword in java?",
    "options": ["interface", "string", "Float", "unsigned"],
    "ans": "A"
}, {
    "q": "Which three are legal array declarations?\n\nint [] myScores [];\nchar [] myChars;\nint [6] myScores;\nDog myDogs [];\nDog myDogs [7];\n",
    "options": ["1, 2, 4", "2, 4, 5", "2, 3, 4", "All are correct."],
    "ans": "A"
}, {
    "q": "public interface Foo \n{ \n    int k = 4; /* Line 3 */\n}\n\nWhich three piece of codes are equivalent to line 3?\n\nfinal int k = 4;\npublic int k = 4;\nstatic int k = 4;\nabstract int k = 4;\nvolatile int k = 4;\nprotected int k = 4;\n",
    "options": ["1, 2 and 3", "2, 3 and 4", "3, 4 and 5", "4, 5 and 6"],
    "ans": "A"
}, {
    "q": "Which one of the following will declare an array and initialize it with five numbers?",
    "options": ["Array a = new Array(5);", "int [] a = {23,22,21,20,19};", "int a [] = new int[5];", "int [5] array;"],
    "ans": "B"
}, {
    "q": "Which three are valid declarations of a char?\n\nchar c1 = 064770;\nchar c2 = 'face';\nchar c3 = 0xbeef;\nchar c4 = \\u0022;\nchar c5 = '\\iface';\nchar c6 = '\\uface';\n",
    "options": ["1, 2, 4", "1, 3, 6", "3, 5", "5 only"],
    "ans": "B"
}, {
    "q": "Which is the valid declarations within an interface definition?",
    "options": ["public double methoda();", "public final double methoda();", "static void methoda(double d1);", "protected void methoda(double d1);"],
    "ans": "A"
}, {
    "q": "Which one is a valid declaration of a boolean?",
    "options": ["boolean b1 = 0;", "boolean b2 = 'false';", "boolean b3 = false;", "boolean b4 = Boolean.false();", "boolean b5 = no;"],
    "ans": "C"
}, {
    "q": "Which three are valid declarations of a float?\n\nfloat f1 = -343;\nfloat f2 = 3.14;\nfloat f3 = 0x12345;\nfloat f4 = 42e7;\nfloat f5 = 2001.0D;\nfloat f6 = 2.81F;\n",
    "options": ["1, 2, 4", "2, 3, 5", "1, 3, 6", "2, 4, 6"],
    "ans": "C"
}, {
    "q": "Which is a valid declarations of a String?",
    "options": ["String s1 = null;", "String s2 = 'null';", "String s3 = (String) 'abc';", "String s4 = (String) '\\ufeed';"],
    "ans": "A"
}, {
    "q": "What is the numerical range of a char?",
    "options": ["-128 to 127", "-(215) to (215) - 1", "0 to 32767", "0 to 65535"],
    "ans": "D"
}, {
    "q": "Suppose that you would like to create an instance of a new Map that has an iteration order that is the same as the iteration order of an existing instance of a Map. Which concrete implementation of the Map interface should be used for the new instance?",
    "options": ["TreeMap", "HashMap", "LinkedHashMap", "The answer depends on the implementation of the existing instance."],
    "ans": "C"
}, {
    "q": "Which class does not override the equals() and hashCode() methods, inheriting them directly from class Object?",
    "options": ["java.lang.String", "java.lang.Double", "java.lang.StringBuffer", "java.lang.Character"],
    "ans": "C"
}, {
    "q": "Which collection class allows you to grow or shrink its size and provides indexed access to its elements, but whose methods are not synchronized?",
    "options": ["java.util.HashSet", "java.util.LinkedHashSet", "java.util.List", "java.util.ArrayList"],
    "ans": "D"
}, {
    "q": "You need to store elements in a collection that guarantees that no duplicates are stored and all elements can be accessed in natural order. Which interface provides that capability?",
    "options": ["java.util.Map", "java.util.Set", "java.util.List", "java.util.Collection"],
    "ans": "B"
}, {
    "q": "Which interface does java.util.Hashtable implement?",
    "options": ["Java.util.Map", "Java.util.List", "Java.util.HashTable", "Java.util.Collection"],
    "ans": "A"
}, {
    "q": "Which interface provides the capability to store objects using a key-value pair?",
    "options": ["Java.util.Map", "Java.util.Set", "Java.util.List", "Java.util.Collection"],
    "ans": "A"
}, {
    "q": "Which collection class allows you to associate its elements with key values, and allows you to retrieve objects in FIFO (first-in, first-out) sequence?",
    "options": ["java.util.ArrayList", "java.util.LinkedHashMap", "java.util.HashMap", "java.util.TreeMap"],
    "ans": "B"
}, {
    "q": "Which collection class allows you to access its elements by associating a key with an element's value, and provides synchronization?",
    "options": ["java.util.SortedMap", "java.util.TreeMap", "java.util.TreeSet", "java.util.Hashtable"],
    "ans": "D"
}, {
    "q": "Which is valid declaration of a float?",
    "options": ["float f = 1F;", "float f = 1.0;", "float f = \"1\";", "float f = 1.0d;"],
    "ans": "A"
}, {
    "q": "/* Missing Statement ? */\npublic class foo \n{\n    public static void main(String[]args)throws Exception \n    {\n        java.io.PrintWriter out = new java.io.PrintWriter(); \n        new java.io.OutputStreamWriter(System.out,true); \n        out.println(\"Hello\"); \n    } \n}\n\nWhat line of code should replace the missing statement to make this program compile?",
    "options": ["No statement required.", "import java.io.*;", "include java.io.*;", "import java.io.PrintWriter;"],
    "ans": "A"
}, {
    "q": "What is the numerical range of char?",
    "options": ["0 to 32767", "0 to 65535", "-256 to 255", "-32768 to 32767"],
    "ans": "B"
}, {
    "q": "Which of the following are Java reserved words?\n\nrun\nimport\ndefault\nimplement\n",
    "options": ["1 and 2", "2 and 3", "3 and 4", "2 and 4"],
    "ans": "B"
}, {
    "q": "What will be the output of the program?\nclass PassA \n{\n    public static void main(String [] args) \n    {\n        PassA p = new PassA();\n        p.start();\n    }\n\n    void start() \n    {\n        long [] a1 = {3,4,5};\n        long [] a2 = fix(a1);\n        System.out.print(a1[0] + a1[1] + a1[2] + \" \");\n        System.out.println(a2[0] + a2[1] + a2[2]);\n    }\n\n    long [] fix(long [] a3) \n    {\n        a3[1] = 7;\n        return a3;\n    }\n}\n",
    "options": ["12 15", "15 15", "3 4 5 3 7 5", "3 7 5 3 7 5"],
    "ans": "B"
}, {
    "q": "What will be the output of the program?\nclass Test \n{\n    public static void main(String [] args) \n    {\n        Test p = new Test();\n        p.start();\n    }\n\n    void start() \n    {\n        boolean b1 = false;\n        boolean b2 = fix(b1);\n        System.out.println(b1 + \" \" + b2);\n    }\n\n    boolean fix(boolean b1) \n    {\n        b1 = true;\n        return b1;\n    }\n}\n",
    "options": ["true true", "false true", "true false", "false false"],
    "ans": "B"
}, {
    "q": "What will be the output of the program?\nclass PassS \n{\n    public static void main(String [] args) \n    {\n        PassS p = new PassS();\n        p.start();\n    }\n\n    void start() \n    {\n        String s1 = \"slip\";\n        String s2 = fix(s1);\n        System.out.println(s1 + \" \" + s2);\n    }\n\n    String fix(String s1) \n    {\n        s1 = s1 + \"stream\";\n        System.out.print(s1 + \" \");\n        return \"stream\";\n    }\n}\n",
    "options": ["slip stream", "slipstream stream", "stream slip stream", "slipstream slip stream"],
    "ans": "D"
}, {
    "q": "What will be the output of the program?\nclass BitShift \n{\n    public static void main(String [] args) \n    {\n        int x = 0x80000000;\n        System.out.print(x + \" and  \");\n        x = x >>> 31;\n        System.out.println(x);\n    }\n}\n",
    "options": ["-2147483648 and 1", "0x80000000 and 0x00000001", "-2147483648 and -1", "1 and -2147483648"],
    "ans": "A"
}, {
    "q": "What will be the output of the program?\nclass Equals \n{\n    public static void main(String [] args) \n    {\n        int x = 100;\n        double y = 100.1;\n        boolean b = (x = y); /* Line 7 */\n        System.out.println(b);\n    }\n}\n",
    "options": ["true", "false", "Compilation fails", "An exception is thrown at runtime"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\nclass Test \n{\n    public static void main(String [] args) \n    {\n        int x=20;\n        String sup = (x < 15) ? \"small\" : (x < 22)? \"tiny\" : \"huge\";\n        System.out.println(sup);\n    }\n}\n",
    "options": ["small", "tiny", "huge", "Compilation fails"],
    "ans": "B"
}, {
    "q": "What will be the output of the program?\nclass Test \n{\n    public static void main(String [] args) \n    {\n        int x= 0;\n        int y= 0;\n        for (int z = 0; z < 5; z++) \n        {\n            if (( ++x > 2 ) && (++y > 2)) \n            {\n                x++;\n            }\n        }\n        System.out.println(x + \" \" + y);\n    }\n}\n",
    "options": ["5 2", "5 3", "6 3", "6 4"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\nclass Test \n{\n    public static void main(String [] args) \n    {\n        int x= 0;\n        int y= 0;\n        for (int z = 0; z < 5; z++) \n        {\n            if (( ++x > 2 ) || (++y > 2)) \n            {\n                x++;\n            }\n        }\n    System.out.println(x + \" \" + y);\n    }\n}\n",
    "options": ["5 3", "8 2", "8 3", "8 5"],
    "ans": "B"
}, {
    "q": "What will be the output of the program?\nclass Bitwise \n{\n    public static void main(String [] args) \n    {\n        int x = 11 & 9;\n        int y = x ^ 3;\n        System.out.println( y | 12 );\n    }\n}\n",
    "options": ["0", "7", "8", "14"],
    "ans": "D"
}, {
    "q": "What will be the output of the program?\nclass SSBool \n{\n    public static void main(String [] args) \n    {\n        boolean b1 = true;\n        boolean b2 = false;\n        boolean b3 = true;\n        if ( b1 & b2 | b2 & b3 | b2 ) /* Line 8 */\n            System.out.print(\"ok \");\n        if ( b1 & b2 | b2 & b3 | b2 | b1 ) /*Line 10*/\n            System.out.println(\"dokey\");\n    }\n}\n",
    "options": ["ok", "dokey", "ok dokey", "No output is produced", "Compilation error"],
    "ans": "B"
}, {
    "q": "What will be the output of the program?\nclass SC2 \n{\n    public static void main(String [] args) \n    {\n        SC2 s = new SC2();\n        s.start();\n    }\n\n    void start() \n    {\n        int a = 3;\n        int b = 4;\n        System.out.print(\" \" + 7 + 2 + \" \");\n        System.out.print(a + b);\n        System.out.print(\" \" + a + b + \" \");\n        System.out.print(foo() + a + b + \" \");\n        System.out.println(a + b + foo());\n    }\n\n    String foo() \n    {\n        return \"foo\";\n    }\n}\n",
    "options": ["9 7 7 foo 7 7foo", "72 34 34 foo34 34foo", "9 7 7 foo34 34foo", "72 7 34 foo34 7foo"],
    "ans": "D"
}, {
    "q": "What will be the output of the program?\nclass Test \n{\n    static int s;\n    public static void main(String [] args) \n    {\n        Test p = new Test();\n        p.start();\n        System.out.println(s);\n    }\n\n    void start() \n    {\n        int x = 7;\n        twice(x);\n        System.out.print(x + \" \");\n    }\n\n    void twice(int x) \n    {\n        x = x*2;\n        s = x;\n    }\n}\n",
    "options": ["7 7", "7 14", "14 0", "14 14"],
    "ans": "B"
}, {
    "q": "What will be the output of the program?\nclass Two \n{\n    byte x;\n}\n\nclass PassO \n{\n    public static void main(String [] args) \n    {\n        PassO p = new PassO();\n        p.start();\n    }\n\n    void start() \n    {\n        Two t = new Two();\n        System.out.print(t.x + \" \");\n        Two t2 = fix(t);\n        System.out.println(t.x + \" \" + t2.x);\n    }\n\n    Two fix(Two tt) \n    {\n        tt.x = 42;\n        return tt;\n    }\n}\n",
    "options": ["null null 42", "0 0 42", "0 42 42", "0 0 0"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\nclass BoolArray \n{\n    boolean [] b = new boolean[3];\n    int count = 0;\n\n    void set(boolean [] x, int i) \n    {\n        x[i] = true;\n        ++count;\n    }\n\n    public static void main(String [] args) \n    {\n        BoolArray ba = new BoolArray();\n        ba.set(ba.b, 0);\n        ba.set(ba.b, 2);\n        ba.test();\n    }\n\n    void test() \n    {\n        if ( b[0] && b[1] | b[2] )\n            count++;\n        if ( b[1] && b[(++count - 2)] )\n            count += 7;\n        System.out.println(\"count = \" + count);\n    }\n}\n",
    "options": ["count = 0", "count = 2", "count = 3", "count = 4"],
    "ans": "C"
}, {
    "q": "What will be the output of the program?\npublic class Test \n{ \n    public static void leftshift(int i, int j) \n    {\n        i <<= j; \n    } \n    public static void main(String args[]) \n    {\n        int i = 4, j = 2; \n        leftshift(i, j); \n        System.out.printIn(i); \n    } \n}\n",
    "options": ["2", "4", "8", "16"],
    "ans": "B"
}, {
    "q": "What is the name of the method used to start a thread execution?",
    "options": ["init();", "start();", "run();", "resume();"],
    "ans": "B"
}, {
    "q": "Which two are valid constructors for Thread?\n\nThread(Runnable r, String name)\nThread()\nThread(int priority)\nThread(Runnable r, ThreadGroup g)\nThread(Runnable r, int priority)\n",
    "options": ["1 and 3", "2 and 4", "1 and 2", "2 and 5"],
    "ans": "C"
}, {
    "q": "Which three are methods of the Object class?\n\nnotify();\nnotifyAll();\nisInterrupted();\nsynchronized();\ninterrupt();\nwait(long msecs);\nsleep(long msecs);\nyield();\n",
    "options": ["1, 2, 4", "2, 4, 5", "1, 2, 6", "2, 3, 4"],
    "ans": "C"
}, {
    "q": "class X implements Runnable \n{ \n    public static void main(String args[]) \n    {\n        /* Missing code? */\n    } \n    public void run() {} \n}\n\nWhich of the following line of code is suitable to start a thread ?",
    "options": ["Thread t = new Thread(X);", "Thread t = new Thread(X); t.start();", "X run = new X(); Thread t = new Thread(run); t.start();", "Thread t = new Thread(); x.run();"],
    "ans": "C"
}, {
    "q": "Which cannot directly cause a thread to stop executing?",
    "options": ["Calling the SetPriority() method on a Thread object.", "Calling the wait() method on an object.", "Calling notify() method on an object.", "Calling read() method on an InputStream object."],
    "ans": "C"
}, {
    "q": "Which two of the following methods are defined in class Thread?\n\nstart()\nwait()\nnotify()\nrun()\nterminate()\n",
    "options": ["1 and 4", "2 and 3", "3 and 4", "2 and 4"],
    "ans": "A"
}, {
    "q": "Which three guarantee that a thread will leave the running state?\n\nyield()\nwait()\nnotify()\nnotifyAll()\nsleep(1000)\naLiveThread.join()\nThread.killThread()\n",
    "options": ["1, 2 and 4", "2, 5 and 6", "3, 4 and 7", "4, 5 and 7"],
    "ans": "B"
}, {
    "q": "Which of the following will directly stop the execution of a Thread?",
    "options": ["wait()", "notify()", "notifyall()", "exits synchronized code"],
    "ans": "A"
}, {
    "q": "Which method must be defined by a class implementing the java.lang.Runnable interface?",
    "options": ["void run()", "public void run()", "public void start()", "void run(int priority)"],
    "ans": "B"
}, {
    "q": "Which will contain the body of the thread?",
    "options": ["run();", "start();", "stop();", "main();"],
    "ans": "A"
}, {
    "q": "Which method registers a thread in a thread scheduler?",
    "options": ["run();", "construct();", "start();", "register();"],
    "ans": "C"
}, {
    "q": "Assume the following method is properly synchronized and called from a thread A on an object B:\nwait(2000);\nAfter calling this method, when will the thread A become a candidate to get another turn at the CPU?",
    "options": ["After thread A is notified, or after two seconds.", "After the lock on B is released, or after two seconds.", "Two seconds after thread A is notified.", "Two seconds after lock B is released."],
    "ans": "A"
}, {
    "q": "Which of the following will not directly cause a thread to stop?",
    "options": ["notify()", "wait()", "InputStream access", "sleep()"],
    "ans": "A"
}, {
    "q": "Which class or interface defines the wait(), notify(),and notifyAll() methods?",
    "options": ["Object", "Thread", "Runnable", "Class"],
    "ans": "A"
}, {
    "q": "public class MyRunnable implements Runnable \n{\n    public void run() \n    {\n        // some code here\n    }\n}\n\nwhich of these will create and start this thread?",
    "options": ["new Runnable(MyRunnable).start();", "new Thread(MyRunnable).run();", "new Thread(new MyRunnable()).start();", "new MyRunnable().start();"],
    "ans": "C"
}]